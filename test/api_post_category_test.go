/*
SendX REST API

Testing PostCategoryAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sendx

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/sendx/sendx-go-sdk"
)

func Test_sendx_PostCategoryAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PostCategoryAPIService CreatePostCategory", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PostCategoryAPI.CreatePostCategory(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PostCategoryAPIService DeletePostCategory", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var identifier string

		resp, httpRes, err := apiClient.PostCategoryAPI.DeletePostCategory(context.Background(), identifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PostCategoryAPIService GetAllPostCategories", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PostCategoryAPI.GetAllPostCategories(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PostCategoryAPIService GetPostCategory", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var identifier string

		resp, httpRes, err := apiClient.PostCategoryAPI.GetPostCategory(context.Background(), identifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PostCategoryAPIService UpdatePostCategory", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var identifier string

		resp, httpRes, err := apiClient.PostCategoryAPI.UpdatePostCategory(context.Background(), identifier).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
