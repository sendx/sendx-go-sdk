/*
SendX REST API

# Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

API version: 1.0.0
Contact: support@sendx.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sendx

import (
	"encoding/json"
)

// checks if the TagRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagRequest{}

// TagRequest struct for TagRequest
type TagRequest struct {
	Name *string `json:"name,omitempty"`
}

// NewTagRequest instantiates a new TagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagRequest() *TagRequest {
	this := TagRequest{}
	return &this
}

// NewTagRequestWithDefaults instantiates a new TagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagRequestWithDefaults() *TagRequest {
	this := TagRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TagRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TagRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TagRequest) SetName(v string) {
	o.Name = &v
}

func (o TagRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableTagRequest struct {
	value *TagRequest
	isSet bool
}

func (v NullableTagRequest) Get() *TagRequest {
	return v.value
}

func (v *NullableTagRequest) Set(val *TagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagRequest(val *TagRequest) *NullableTagRequest {
	return &NullableTagRequest{value: val, isSet: true}
}

func (v NullableTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


