/*
SendX REST API

# Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

API version: 1.0.0
Contact: support@sendx.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sendx

import (
	"encoding/json"
)

// checks if the DeleteCampaign200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCampaign200Response{}

// DeleteCampaign200Response struct for DeleteCampaign200Response
type DeleteCampaign200Response struct {
	// ID of the deleted campaign
	Id *int32 `json:"id,omitempty"`
	// Success message
	Message *string `json:"message,omitempty"`
}

// NewDeleteCampaign200Response instantiates a new DeleteCampaign200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCampaign200Response() *DeleteCampaign200Response {
	this := DeleteCampaign200Response{}
	return &this
}

// NewDeleteCampaign200ResponseWithDefaults instantiates a new DeleteCampaign200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCampaign200ResponseWithDefaults() *DeleteCampaign200Response {
	this := DeleteCampaign200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeleteCampaign200Response) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCampaign200Response) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeleteCampaign200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DeleteCampaign200Response) SetId(v int32) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DeleteCampaign200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCampaign200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DeleteCampaign200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DeleteCampaign200Response) SetMessage(v string) {
	o.Message = &v
}

func (o DeleteCampaign200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCampaign200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableDeleteCampaign200Response struct {
	value *DeleteCampaign200Response
	isSet bool
}

func (v NullableDeleteCampaign200Response) Get() *DeleteCampaign200Response {
	return v.value
}

func (v *NullableDeleteCampaign200Response) Set(val *DeleteCampaign200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCampaign200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCampaign200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCampaign200Response(val *DeleteCampaign200Response) *NullableDeleteCampaign200Response {
	return &NullableDeleteCampaign200Response{value: val, isSet: true}
}

func (v NullableDeleteCampaign200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCampaign200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


