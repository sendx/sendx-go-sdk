/*
SendX REST API

# SendX REST API Documentation  ## üöÄ Introduction  The SendX API is organized around REST principles. Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  **Key Features:** - üîí **Security**: Team-based authentication with optional member-level access - üéØ **Resource-Oriented**: RESTful design with clear resource boundaries - üìä **Rich Data Models**: Three-layer model system (Input/Output/Internal) - üîó **Relationships**: Automatic prefix handling for resource relationships - üìà **Scalable**: Built for high-volume email marketing operations  ## üèóÔ∏è Architecture Overview  SendX uses a three-layer model architecture:  1. **Input Models** (`RestE*`): For API requests 2. **Output Models** (`RestR*`): For API responses with prefixed IDs 3. **Internal Models**: Core business logic (not exposed in API)  ## üîê Security & Authentication  SendX uses API key authentication:  ### Team API Key ```http X-Team-ApiKey: YOUR_TEAM_API_KEY ``` - **Required for all requests** - Team-level access to resources - Available in SendX Settings ‚Üí Team API Key  ## üÜî Encrypted ID System  SendX uses encrypted IDs for security and better developer experience:  - **Internal IDs**: Sequential integers (not exposed) - **Encrypted IDs**: 22-character alphanumeric strings - **Prefixed IDs**: Resource-type prefixes in API responses (`contact_<22-char-id>`)  ### ID Format  **All resource IDs follow this pattern:** ``` <resource_prefix>_<22_character_alphanumeric_string> ```  **Example:** ```json {   \"id\": \"contact_BnKjkbBBS500CoBCP0oChQ\",   \"lists\": [\"list_OcuxJHdiAvujmwQVJfd3ss\", \"list_0tOFLp5RgV7s3LNiHrjGYs\"],   \"tags\": [\"tag_UhsDkjL772Qbj5lWtT62VK\", \"tag_fL7t9lsnZ9swvx2HrtQ9wM\"] } ```  ## üìö Resource Prefixes  | Resource | Prefix | Example | |----------|--------|---------| | Contact | `contact_` | `contact_BnKjkbBBS500CoBCP0oChQ` | | Campaign | `campaign_` | `campaign_LUE9BTxmksSmqHWbh96zsn` | | List | `list_` | `list_OcuxJHdiAvujmwQVJfd3ss` | | Tag | `tag_` | `tag_UhsDkjL772Qbj5lWtT62VK` | | Sender | `sender_` | `sender_4vK3WFhMgvOwUNyaL4QxCD` | | Template | `template_` | `template_f3lJvTEhSjKGVb5Lwc5SWS` | | Custom Field | `field_` | `field_MnuqBAG2NPLm7PZMWbjQxt` | | Webhook | `webhook_` | `webhook_9l154iiXlZoPo7vngmamee` | | Post | `post_` | `post_XyZ123aBc456DeF789GhI` | | Post Category | `post_category_` | `post_category_YzS1wOU20yw87UUHKxMzwn` | | Post Tag | `post_tag_` | `post_tag_123XyZ456AbC` | | Member | `member_` | `member_JkL012MnO345PqR678` |  ## üéØ Best Practices  ### Error Handling - **Always check status codes**: 2xx = success, 4xx = client error, 5xx = server error - **Read error messages**: Descriptive messages help debug issues - **Handle rate limits**: Respect API rate limits for optimal performance  ### Data Validation - **Email format**: Must be valid email addresses - **Required fields**: Check documentation for mandatory fields - **Field lengths**: Respect maximum length constraints  ### Performance - **Pagination**: Use offset/limit for large datasets - **Batch operations**: Process multiple items when supported - **Caching**: Cache responses when appropriate  ## üõ†Ô∏è SDKs & Integration  Official SDKs available for: - [Golang](https://github.com/sendx/sendx-go-sdk) - [Python](https://github.com/sendx/sendx-python-sdk) - [Ruby](https://github.com/sendx/sendx-ruby-sdk) - [Java](https://github.com/sendx/sendx-java-sdk) - [PHP](https://github.com/sendx/sendx-php-sdk) - [JavaScript](https://github.com/sendx/sendx-javascript-sdk)  ## üìû Support  Need help? Contact us: - üí¨ **Website Chat**: Available on sendx.io - üìß **Email**: hello@sendx.io - üìö **Documentation**: Full guides at help.sendx.io  ---  **API Endpoint:** `https://api.sendx.io/api/v1/rest`  [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/33476323-44b198b0-5219-4619-a01f-cfc24d573885?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D33476323-44b198b0-5219-4619-a01f-cfc24d573885%26entityType%3Dcollection%26workspaceId%3D6b1e4f65-96a9-4136-9512-6266c852517e) 

API version: 1.0.0
Contact: hello@sendx.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sendx

import (
	"encoding/json"
)

// checks if the WebhookObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookObject{}

// WebhookObject struct for WebhookObject
type WebhookObject struct {
	// The type of the event.
	Type *int64 `json:"type,omitempty"`
	// The timestamp of the event in milliseconds since the epoch.
	Time *int64 `json:"time,omitempty"`
	// Arbitrary data associated with the event.
	Data *string `json:"data,omitempty"`
	// Optional provider message ID.
	ProviderMessageId *string `json:"provider_message_id,omitempty"`
	// Optional campaign ID.
	CampaignId *string `json:"campaign_id,omitempty"`
	// Optional drip step ID.
	DripStepId *string `json:"drip_step_id,omitempty"`
	// Optional RSS execution ID.
	RssExecId *string `json:"rss_exec_id,omitempty"`
	// Optional tag ID.
	TagId *string `json:"tag_id,omitempty"`
	// Optional link associated with the event.
	Link *string `json:"link,omitempty"`
	// Optional list ID.
	ListId *string `json:"list_id,omitempty"`
	// Optional contact ID.
	ContactId *string `json:"contact_id,omitempty"`
	// Optional custom field ID.
	CustomFieldId *string `json:"custom_field_id,omitempty"`
	// Optional template ID.
	TemplateId *string `json:"template_id,omitempty"`
	// Optional popup ID.
	PopupId *string `json:"popup_id,omitempty"`
	// Optional landing page ID.
	LandingPageId *string `json:"landing_page_id,omitempty"`
	// Optional form ID.
	FormId *string `json:"form_id,omitempty"`
	// Optional segment ID.
	SegmentId *string `json:"segment_id,omitempty"`
	// Optional automation ID.
	AutomationId *string `json:"automation_id,omitempty"`
	// Optional drip ID.
	DripId *string `json:"drip_id,omitempty"`
	// Optional RSS ID.
	RssId *string `json:"rss_id,omitempty"`
	// Optional A/B test ID.
	AbTestId *string `json:"ab_test_id,omitempty"`
	// Optional workflow ID.
	WorkflowId *string `json:"workflow_id,omitempty"`
	// Optional workflow node ID.
	WorkflowNodeId *string `json:"workflow_node_id,omitempty"`
	// Optional workflow email ID.
	WorkflowEmailId *string `json:"workflow_email_id,omitempty"`
}

// NewWebhookObject instantiates a new WebhookObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookObject() *WebhookObject {
	this := WebhookObject{}
	return &this
}

// NewWebhookObjectWithDefaults instantiates a new WebhookObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookObjectWithDefaults() *WebhookObject {
	this := WebhookObject{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebhookObject) GetType() int64 {
	if o == nil || IsNil(o.Type) {
		var ret int64
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetTypeOk() (*int64, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebhookObject) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int64 and assigns it to the Type field.
func (o *WebhookObject) SetType(v int64) {
	o.Type = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *WebhookObject) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *WebhookObject) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *WebhookObject) SetTime(v int64) {
	o.Time = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *WebhookObject) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *WebhookObject) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *WebhookObject) SetData(v string) {
	o.Data = &v
}

// GetProviderMessageId returns the ProviderMessageId field value if set, zero value otherwise.
func (o *WebhookObject) GetProviderMessageId() string {
	if o == nil || IsNil(o.ProviderMessageId) {
		var ret string
		return ret
	}
	return *o.ProviderMessageId
}

// GetProviderMessageIdOk returns a tuple with the ProviderMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetProviderMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderMessageId) {
		return nil, false
	}
	return o.ProviderMessageId, true
}

// HasProviderMessageId returns a boolean if a field has been set.
func (o *WebhookObject) HasProviderMessageId() bool {
	if o != nil && !IsNil(o.ProviderMessageId) {
		return true
	}

	return false
}

// SetProviderMessageId gets a reference to the given string and assigns it to the ProviderMessageId field.
func (o *WebhookObject) SetProviderMessageId(v string) {
	o.ProviderMessageId = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *WebhookObject) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *WebhookObject) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *WebhookObject) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetDripStepId returns the DripStepId field value if set, zero value otherwise.
func (o *WebhookObject) GetDripStepId() string {
	if o == nil || IsNil(o.DripStepId) {
		var ret string
		return ret
	}
	return *o.DripStepId
}

// GetDripStepIdOk returns a tuple with the DripStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetDripStepIdOk() (*string, bool) {
	if o == nil || IsNil(o.DripStepId) {
		return nil, false
	}
	return o.DripStepId, true
}

// HasDripStepId returns a boolean if a field has been set.
func (o *WebhookObject) HasDripStepId() bool {
	if o != nil && !IsNil(o.DripStepId) {
		return true
	}

	return false
}

// SetDripStepId gets a reference to the given string and assigns it to the DripStepId field.
func (o *WebhookObject) SetDripStepId(v string) {
	o.DripStepId = &v
}

// GetRssExecId returns the RssExecId field value if set, zero value otherwise.
func (o *WebhookObject) GetRssExecId() string {
	if o == nil || IsNil(o.RssExecId) {
		var ret string
		return ret
	}
	return *o.RssExecId
}

// GetRssExecIdOk returns a tuple with the RssExecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetRssExecIdOk() (*string, bool) {
	if o == nil || IsNil(o.RssExecId) {
		return nil, false
	}
	return o.RssExecId, true
}

// HasRssExecId returns a boolean if a field has been set.
func (o *WebhookObject) HasRssExecId() bool {
	if o != nil && !IsNil(o.RssExecId) {
		return true
	}

	return false
}

// SetRssExecId gets a reference to the given string and assigns it to the RssExecId field.
func (o *WebhookObject) SetRssExecId(v string) {
	o.RssExecId = &v
}

// GetTagId returns the TagId field value if set, zero value otherwise.
func (o *WebhookObject) GetTagId() string {
	if o == nil || IsNil(o.TagId) {
		var ret string
		return ret
	}
	return *o.TagId
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetTagIdOk() (*string, bool) {
	if o == nil || IsNil(o.TagId) {
		return nil, false
	}
	return o.TagId, true
}

// HasTagId returns a boolean if a field has been set.
func (o *WebhookObject) HasTagId() bool {
	if o != nil && !IsNil(o.TagId) {
		return true
	}

	return false
}

// SetTagId gets a reference to the given string and assigns it to the TagId field.
func (o *WebhookObject) SetTagId(v string) {
	o.TagId = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *WebhookObject) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *WebhookObject) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *WebhookObject) SetLink(v string) {
	o.Link = &v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *WebhookObject) GetListId() string {
	if o == nil || IsNil(o.ListId) {
		var ret string
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetListIdOk() (*string, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *WebhookObject) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given string and assigns it to the ListId field.
func (o *WebhookObject) SetListId(v string) {
	o.ListId = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *WebhookObject) GetContactId() string {
	if o == nil || IsNil(o.ContactId) {
		var ret string
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetContactIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContactId) {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *WebhookObject) HasContactId() bool {
	if o != nil && !IsNil(o.ContactId) {
		return true
	}

	return false
}

// SetContactId gets a reference to the given string and assigns it to the ContactId field.
func (o *WebhookObject) SetContactId(v string) {
	o.ContactId = &v
}

// GetCustomFieldId returns the CustomFieldId field value if set, zero value otherwise.
func (o *WebhookObject) GetCustomFieldId() string {
	if o == nil || IsNil(o.CustomFieldId) {
		var ret string
		return ret
	}
	return *o.CustomFieldId
}

// GetCustomFieldIdOk returns a tuple with the CustomFieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetCustomFieldIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomFieldId) {
		return nil, false
	}
	return o.CustomFieldId, true
}

// HasCustomFieldId returns a boolean if a field has been set.
func (o *WebhookObject) HasCustomFieldId() bool {
	if o != nil && !IsNil(o.CustomFieldId) {
		return true
	}

	return false
}

// SetCustomFieldId gets a reference to the given string and assigns it to the CustomFieldId field.
func (o *WebhookObject) SetCustomFieldId(v string) {
	o.CustomFieldId = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *WebhookObject) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *WebhookObject) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *WebhookObject) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetPopupId returns the PopupId field value if set, zero value otherwise.
func (o *WebhookObject) GetPopupId() string {
	if o == nil || IsNil(o.PopupId) {
		var ret string
		return ret
	}
	return *o.PopupId
}

// GetPopupIdOk returns a tuple with the PopupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetPopupIdOk() (*string, bool) {
	if o == nil || IsNil(o.PopupId) {
		return nil, false
	}
	return o.PopupId, true
}

// HasPopupId returns a boolean if a field has been set.
func (o *WebhookObject) HasPopupId() bool {
	if o != nil && !IsNil(o.PopupId) {
		return true
	}

	return false
}

// SetPopupId gets a reference to the given string and assigns it to the PopupId field.
func (o *WebhookObject) SetPopupId(v string) {
	o.PopupId = &v
}

// GetLandingPageId returns the LandingPageId field value if set, zero value otherwise.
func (o *WebhookObject) GetLandingPageId() string {
	if o == nil || IsNil(o.LandingPageId) {
		var ret string
		return ret
	}
	return *o.LandingPageId
}

// GetLandingPageIdOk returns a tuple with the LandingPageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetLandingPageIdOk() (*string, bool) {
	if o == nil || IsNil(o.LandingPageId) {
		return nil, false
	}
	return o.LandingPageId, true
}

// HasLandingPageId returns a boolean if a field has been set.
func (o *WebhookObject) HasLandingPageId() bool {
	if o != nil && !IsNil(o.LandingPageId) {
		return true
	}

	return false
}

// SetLandingPageId gets a reference to the given string and assigns it to the LandingPageId field.
func (o *WebhookObject) SetLandingPageId(v string) {
	o.LandingPageId = &v
}

// GetFormId returns the FormId field value if set, zero value otherwise.
func (o *WebhookObject) GetFormId() string {
	if o == nil || IsNil(o.FormId) {
		var ret string
		return ret
	}
	return *o.FormId
}

// GetFormIdOk returns a tuple with the FormId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetFormIdOk() (*string, bool) {
	if o == nil || IsNil(o.FormId) {
		return nil, false
	}
	return o.FormId, true
}

// HasFormId returns a boolean if a field has been set.
func (o *WebhookObject) HasFormId() bool {
	if o != nil && !IsNil(o.FormId) {
		return true
	}

	return false
}

// SetFormId gets a reference to the given string and assigns it to the FormId field.
func (o *WebhookObject) SetFormId(v string) {
	o.FormId = &v
}

// GetSegmentId returns the SegmentId field value if set, zero value otherwise.
func (o *WebhookObject) GetSegmentId() string {
	if o == nil || IsNil(o.SegmentId) {
		var ret string
		return ret
	}
	return *o.SegmentId
}

// GetSegmentIdOk returns a tuple with the SegmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetSegmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentId) {
		return nil, false
	}
	return o.SegmentId, true
}

// HasSegmentId returns a boolean if a field has been set.
func (o *WebhookObject) HasSegmentId() bool {
	if o != nil && !IsNil(o.SegmentId) {
		return true
	}

	return false
}

// SetSegmentId gets a reference to the given string and assigns it to the SegmentId field.
func (o *WebhookObject) SetSegmentId(v string) {
	o.SegmentId = &v
}

// GetAutomationId returns the AutomationId field value if set, zero value otherwise.
func (o *WebhookObject) GetAutomationId() string {
	if o == nil || IsNil(o.AutomationId) {
		var ret string
		return ret
	}
	return *o.AutomationId
}

// GetAutomationIdOk returns a tuple with the AutomationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetAutomationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AutomationId) {
		return nil, false
	}
	return o.AutomationId, true
}

// HasAutomationId returns a boolean if a field has been set.
func (o *WebhookObject) HasAutomationId() bool {
	if o != nil && !IsNil(o.AutomationId) {
		return true
	}

	return false
}

// SetAutomationId gets a reference to the given string and assigns it to the AutomationId field.
func (o *WebhookObject) SetAutomationId(v string) {
	o.AutomationId = &v
}

// GetDripId returns the DripId field value if set, zero value otherwise.
func (o *WebhookObject) GetDripId() string {
	if o == nil || IsNil(o.DripId) {
		var ret string
		return ret
	}
	return *o.DripId
}

// GetDripIdOk returns a tuple with the DripId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetDripIdOk() (*string, bool) {
	if o == nil || IsNil(o.DripId) {
		return nil, false
	}
	return o.DripId, true
}

// HasDripId returns a boolean if a field has been set.
func (o *WebhookObject) HasDripId() bool {
	if o != nil && !IsNil(o.DripId) {
		return true
	}

	return false
}

// SetDripId gets a reference to the given string and assigns it to the DripId field.
func (o *WebhookObject) SetDripId(v string) {
	o.DripId = &v
}

// GetRssId returns the RssId field value if set, zero value otherwise.
func (o *WebhookObject) GetRssId() string {
	if o == nil || IsNil(o.RssId) {
		var ret string
		return ret
	}
	return *o.RssId
}

// GetRssIdOk returns a tuple with the RssId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetRssIdOk() (*string, bool) {
	if o == nil || IsNil(o.RssId) {
		return nil, false
	}
	return o.RssId, true
}

// HasRssId returns a boolean if a field has been set.
func (o *WebhookObject) HasRssId() bool {
	if o != nil && !IsNil(o.RssId) {
		return true
	}

	return false
}

// SetRssId gets a reference to the given string and assigns it to the RssId field.
func (o *WebhookObject) SetRssId(v string) {
	o.RssId = &v
}

// GetAbTestId returns the AbTestId field value if set, zero value otherwise.
func (o *WebhookObject) GetAbTestId() string {
	if o == nil || IsNil(o.AbTestId) {
		var ret string
		return ret
	}
	return *o.AbTestId
}

// GetAbTestIdOk returns a tuple with the AbTestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetAbTestIdOk() (*string, bool) {
	if o == nil || IsNil(o.AbTestId) {
		return nil, false
	}
	return o.AbTestId, true
}

// HasAbTestId returns a boolean if a field has been set.
func (o *WebhookObject) HasAbTestId() bool {
	if o != nil && !IsNil(o.AbTestId) {
		return true
	}

	return false
}

// SetAbTestId gets a reference to the given string and assigns it to the AbTestId field.
func (o *WebhookObject) SetAbTestId(v string) {
	o.AbTestId = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WebhookObject) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *WebhookObject) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *WebhookObject) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetWorkflowNodeId returns the WorkflowNodeId field value if set, zero value otherwise.
func (o *WebhookObject) GetWorkflowNodeId() string {
	if o == nil || IsNil(o.WorkflowNodeId) {
		var ret string
		return ret
	}
	return *o.WorkflowNodeId
}

// GetWorkflowNodeIdOk returns a tuple with the WorkflowNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetWorkflowNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowNodeId) {
		return nil, false
	}
	return o.WorkflowNodeId, true
}

// HasWorkflowNodeId returns a boolean if a field has been set.
func (o *WebhookObject) HasWorkflowNodeId() bool {
	if o != nil && !IsNil(o.WorkflowNodeId) {
		return true
	}

	return false
}

// SetWorkflowNodeId gets a reference to the given string and assigns it to the WorkflowNodeId field.
func (o *WebhookObject) SetWorkflowNodeId(v string) {
	o.WorkflowNodeId = &v
}

// GetWorkflowEmailId returns the WorkflowEmailId field value if set, zero value otherwise.
func (o *WebhookObject) GetWorkflowEmailId() string {
	if o == nil || IsNil(o.WorkflowEmailId) {
		var ret string
		return ret
	}
	return *o.WorkflowEmailId
}

// GetWorkflowEmailIdOk returns a tuple with the WorkflowEmailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookObject) GetWorkflowEmailIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowEmailId) {
		return nil, false
	}
	return o.WorkflowEmailId, true
}

// HasWorkflowEmailId returns a boolean if a field has been set.
func (o *WebhookObject) HasWorkflowEmailId() bool {
	if o != nil && !IsNil(o.WorkflowEmailId) {
		return true
	}

	return false
}

// SetWorkflowEmailId gets a reference to the given string and assigns it to the WorkflowEmailId field.
func (o *WebhookObject) SetWorkflowEmailId(v string) {
	o.WorkflowEmailId = &v
}

func (o WebhookObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ProviderMessageId) {
		toSerialize["provider_message_id"] = o.ProviderMessageId
	}
	if !IsNil(o.CampaignId) {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if !IsNil(o.DripStepId) {
		toSerialize["drip_step_id"] = o.DripStepId
	}
	if !IsNil(o.RssExecId) {
		toSerialize["rss_exec_id"] = o.RssExecId
	}
	if !IsNil(o.TagId) {
		toSerialize["tag_id"] = o.TagId
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.ContactId) {
		toSerialize["contact_id"] = o.ContactId
	}
	if !IsNil(o.CustomFieldId) {
		toSerialize["custom_field_id"] = o.CustomFieldId
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.PopupId) {
		toSerialize["popup_id"] = o.PopupId
	}
	if !IsNil(o.LandingPageId) {
		toSerialize["landing_page_id"] = o.LandingPageId
	}
	if !IsNil(o.FormId) {
		toSerialize["form_id"] = o.FormId
	}
	if !IsNil(o.SegmentId) {
		toSerialize["segment_id"] = o.SegmentId
	}
	if !IsNil(o.AutomationId) {
		toSerialize["automation_id"] = o.AutomationId
	}
	if !IsNil(o.DripId) {
		toSerialize["drip_id"] = o.DripId
	}
	if !IsNil(o.RssId) {
		toSerialize["rss_id"] = o.RssId
	}
	if !IsNil(o.AbTestId) {
		toSerialize["ab_test_id"] = o.AbTestId
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflow_id"] = o.WorkflowId
	}
	if !IsNil(o.WorkflowNodeId) {
		toSerialize["workflow_node_id"] = o.WorkflowNodeId
	}
	if !IsNil(o.WorkflowEmailId) {
		toSerialize["workflow_email_id"] = o.WorkflowEmailId
	}
	return toSerialize, nil
}

type NullableWebhookObject struct {
	value *WebhookObject
	isSet bool
}

func (v NullableWebhookObject) Get() *WebhookObject {
	return v.value
}

func (v *NullableWebhookObject) Set(val *WebhookObject) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookObject) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookObject(val *WebhookObject) *NullableWebhookObject {
	return &NullableWebhookObject{value: val, isSet: true}
}

func (v NullableWebhookObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


