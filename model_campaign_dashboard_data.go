/*
SendX REST API

# Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

API version: 1.0.0
Contact: support@sendx.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sendx

import (
	"encoding/json"
	"time"
)

// checks if the CampaignDashboardData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignDashboardData{}

// CampaignDashboardData struct for CampaignDashboardData
type CampaignDashboardData struct {
	// Unique identifier for the campaign.
	Id *int32 `json:"id,omitempty"`
	// Name of the campaign.
	Name *string `json:"name,omitempty"`
	// Subject of the campaign.
	Subject *string `json:"subject,omitempty"`
	// The time the campaign was sent.
	SentTime *time.Time `json:"sentTime,omitempty"`
	// URL to a screenshot of the campaign.
	CampaignScreenshotUrl *string `json:"campaignScreenshotUrl,omitempty"`
}

// NewCampaignDashboardData instantiates a new CampaignDashboardData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignDashboardData() *CampaignDashboardData {
	this := CampaignDashboardData{}
	return &this
}

// NewCampaignDashboardDataWithDefaults instantiates a new CampaignDashboardData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignDashboardDataWithDefaults() *CampaignDashboardData {
	this := CampaignDashboardData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignDashboardData) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDashboardData) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignDashboardData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CampaignDashboardData) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignDashboardData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDashboardData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignDashboardData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignDashboardData) SetName(v string) {
	o.Name = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CampaignDashboardData) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDashboardData) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CampaignDashboardData) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CampaignDashboardData) SetSubject(v string) {
	o.Subject = &v
}

// GetSentTime returns the SentTime field value if set, zero value otherwise.
func (o *CampaignDashboardData) GetSentTime() time.Time {
	if o == nil || IsNil(o.SentTime) {
		var ret time.Time
		return ret
	}
	return *o.SentTime
}

// GetSentTimeOk returns a tuple with the SentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDashboardData) GetSentTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SentTime) {
		return nil, false
	}
	return o.SentTime, true
}

// HasSentTime returns a boolean if a field has been set.
func (o *CampaignDashboardData) HasSentTime() bool {
	if o != nil && !IsNil(o.SentTime) {
		return true
	}

	return false
}

// SetSentTime gets a reference to the given time.Time and assigns it to the SentTime field.
func (o *CampaignDashboardData) SetSentTime(v time.Time) {
	o.SentTime = &v
}

// GetCampaignScreenshotUrl returns the CampaignScreenshotUrl field value if set, zero value otherwise.
func (o *CampaignDashboardData) GetCampaignScreenshotUrl() string {
	if o == nil || IsNil(o.CampaignScreenshotUrl) {
		var ret string
		return ret
	}
	return *o.CampaignScreenshotUrl
}

// GetCampaignScreenshotUrlOk returns a tuple with the CampaignScreenshotUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDashboardData) GetCampaignScreenshotUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignScreenshotUrl) {
		return nil, false
	}
	return o.CampaignScreenshotUrl, true
}

// HasCampaignScreenshotUrl returns a boolean if a field has been set.
func (o *CampaignDashboardData) HasCampaignScreenshotUrl() bool {
	if o != nil && !IsNil(o.CampaignScreenshotUrl) {
		return true
	}

	return false
}

// SetCampaignScreenshotUrl gets a reference to the given string and assigns it to the CampaignScreenshotUrl field.
func (o *CampaignDashboardData) SetCampaignScreenshotUrl(v string) {
	o.CampaignScreenshotUrl = &v
}

func (o CampaignDashboardData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignDashboardData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.SentTime) {
		toSerialize["sentTime"] = o.SentTime
	}
	if !IsNil(o.CampaignScreenshotUrl) {
		toSerialize["campaignScreenshotUrl"] = o.CampaignScreenshotUrl
	}
	return toSerialize, nil
}

type NullableCampaignDashboardData struct {
	value *CampaignDashboardData
	isSet bool
}

func (v NullableCampaignDashboardData) Get() *CampaignDashboardData {
	return v.value
}

func (v *NullableCampaignDashboardData) Set(val *CampaignDashboardData) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignDashboardData) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignDashboardData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignDashboardData(val *CampaignDashboardData) *NullableCampaignDashboardData {
	return &NullableCampaignDashboardData{value: val, isSet: true}
}

func (v NullableCampaignDashboardData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignDashboardData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


