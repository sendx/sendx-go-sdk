/*
SendX REST API

# Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

API version: 1.0.0
Contact: support@sendx.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sendx

import (
	"encoding/json"
)

// checks if the ListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRequest{}

// ListRequest struct for ListRequest
type ListRequest struct {
	// Name of the list
	Name *string `json:"name,omitempty"`
	// Type of the list representing opt-in methods <br> 0: Single opt-in list <br> 1: Double opt-in list 
	Type *int32 `json:"type,omitempty"`
	// Indicates if a thank-you email should be sent
	SendThankYouMail *bool `json:"sendThankYouMail,omitempty"`
	// Name displayed as the sender in the thank-you email
	ThankYouFromName *string `json:"thankYouFromName,omitempty"`
	// Email address from which the thank-you email is sent
	ThankYouFromEmail *string `json:"thankYouFromEmail,omitempty"`
	// Subject line of the thank-you email
	ThankYouMailSubject *string `json:"thankYouMailSubject,omitempty"`
	// Plain text message body of the thank-you email
	ThankYouMailMessage *string `json:"thankYouMailMessage,omitempty"`
	// Sender ID for the thank-you email
	ThankYouSender *string `json:"thankYouSender,omitempty"`
	// Name displayed as the sender in the confirmation email
	ConfirmFromName *string `json:"confirmFromName,omitempty"`
	// Email address from which the confirmation email is sent
	ConfirmFromEmail *string `json:"confirmFromEmail,omitempty"`
	// Subject line of the confirmation email
	ConfirmMailSubject *string `json:"confirmMailSubject,omitempty"`
	// Plain text message body of the confirmation email
	ConfirmMailMessage *string `json:"confirmMailMessage,omitempty"`
	// URL of the success page after confirmation
	ConfirmSuccessPage *string `json:"confirmSuccessPage,omitempty"`
	// Sender ID for the confirmation email
	ConfirmSender *string `json:"confirmSender,omitempty"`
}

// NewListRequest instantiates a new ListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRequest() *ListRequest {
	this := ListRequest{}
	return &this
}

// NewListRequestWithDefaults instantiates a new ListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRequestWithDefaults() *ListRequest {
	this := ListRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListRequest) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListRequest) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *ListRequest) SetType(v int32) {
	o.Type = &v
}

// GetSendThankYouMail returns the SendThankYouMail field value if set, zero value otherwise.
func (o *ListRequest) GetSendThankYouMail() bool {
	if o == nil || IsNil(o.SendThankYouMail) {
		var ret bool
		return ret
	}
	return *o.SendThankYouMail
}

// GetSendThankYouMailOk returns a tuple with the SendThankYouMail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetSendThankYouMailOk() (*bool, bool) {
	if o == nil || IsNil(o.SendThankYouMail) {
		return nil, false
	}
	return o.SendThankYouMail, true
}

// HasSendThankYouMail returns a boolean if a field has been set.
func (o *ListRequest) HasSendThankYouMail() bool {
	if o != nil && !IsNil(o.SendThankYouMail) {
		return true
	}

	return false
}

// SetSendThankYouMail gets a reference to the given bool and assigns it to the SendThankYouMail field.
func (o *ListRequest) SetSendThankYouMail(v bool) {
	o.SendThankYouMail = &v
}

// GetThankYouFromName returns the ThankYouFromName field value if set, zero value otherwise.
func (o *ListRequest) GetThankYouFromName() string {
	if o == nil || IsNil(o.ThankYouFromName) {
		var ret string
		return ret
	}
	return *o.ThankYouFromName
}

// GetThankYouFromNameOk returns a tuple with the ThankYouFromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetThankYouFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouFromName) {
		return nil, false
	}
	return o.ThankYouFromName, true
}

// HasThankYouFromName returns a boolean if a field has been set.
func (o *ListRequest) HasThankYouFromName() bool {
	if o != nil && !IsNil(o.ThankYouFromName) {
		return true
	}

	return false
}

// SetThankYouFromName gets a reference to the given string and assigns it to the ThankYouFromName field.
func (o *ListRequest) SetThankYouFromName(v string) {
	o.ThankYouFromName = &v
}

// GetThankYouFromEmail returns the ThankYouFromEmail field value if set, zero value otherwise.
func (o *ListRequest) GetThankYouFromEmail() string {
	if o == nil || IsNil(o.ThankYouFromEmail) {
		var ret string
		return ret
	}
	return *o.ThankYouFromEmail
}

// GetThankYouFromEmailOk returns a tuple with the ThankYouFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetThankYouFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouFromEmail) {
		return nil, false
	}
	return o.ThankYouFromEmail, true
}

// HasThankYouFromEmail returns a boolean if a field has been set.
func (o *ListRequest) HasThankYouFromEmail() bool {
	if o != nil && !IsNil(o.ThankYouFromEmail) {
		return true
	}

	return false
}

// SetThankYouFromEmail gets a reference to the given string and assigns it to the ThankYouFromEmail field.
func (o *ListRequest) SetThankYouFromEmail(v string) {
	o.ThankYouFromEmail = &v
}

// GetThankYouMailSubject returns the ThankYouMailSubject field value if set, zero value otherwise.
func (o *ListRequest) GetThankYouMailSubject() string {
	if o == nil || IsNil(o.ThankYouMailSubject) {
		var ret string
		return ret
	}
	return *o.ThankYouMailSubject
}

// GetThankYouMailSubjectOk returns a tuple with the ThankYouMailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetThankYouMailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouMailSubject) {
		return nil, false
	}
	return o.ThankYouMailSubject, true
}

// HasThankYouMailSubject returns a boolean if a field has been set.
func (o *ListRequest) HasThankYouMailSubject() bool {
	if o != nil && !IsNil(o.ThankYouMailSubject) {
		return true
	}

	return false
}

// SetThankYouMailSubject gets a reference to the given string and assigns it to the ThankYouMailSubject field.
func (o *ListRequest) SetThankYouMailSubject(v string) {
	o.ThankYouMailSubject = &v
}

// GetThankYouMailMessage returns the ThankYouMailMessage field value if set, zero value otherwise.
func (o *ListRequest) GetThankYouMailMessage() string {
	if o == nil || IsNil(o.ThankYouMailMessage) {
		var ret string
		return ret
	}
	return *o.ThankYouMailMessage
}

// GetThankYouMailMessageOk returns a tuple with the ThankYouMailMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetThankYouMailMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouMailMessage) {
		return nil, false
	}
	return o.ThankYouMailMessage, true
}

// HasThankYouMailMessage returns a boolean if a field has been set.
func (o *ListRequest) HasThankYouMailMessage() bool {
	if o != nil && !IsNil(o.ThankYouMailMessage) {
		return true
	}

	return false
}

// SetThankYouMailMessage gets a reference to the given string and assigns it to the ThankYouMailMessage field.
func (o *ListRequest) SetThankYouMailMessage(v string) {
	o.ThankYouMailMessage = &v
}

// GetThankYouSender returns the ThankYouSender field value if set, zero value otherwise.
func (o *ListRequest) GetThankYouSender() string {
	if o == nil || IsNil(o.ThankYouSender) {
		var ret string
		return ret
	}
	return *o.ThankYouSender
}

// GetThankYouSenderOk returns a tuple with the ThankYouSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetThankYouSenderOk() (*string, bool) {
	if o == nil || IsNil(o.ThankYouSender) {
		return nil, false
	}
	return o.ThankYouSender, true
}

// HasThankYouSender returns a boolean if a field has been set.
func (o *ListRequest) HasThankYouSender() bool {
	if o != nil && !IsNil(o.ThankYouSender) {
		return true
	}

	return false
}

// SetThankYouSender gets a reference to the given string and assigns it to the ThankYouSender field.
func (o *ListRequest) SetThankYouSender(v string) {
	o.ThankYouSender = &v
}

// GetConfirmFromName returns the ConfirmFromName field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmFromName() string {
	if o == nil || IsNil(o.ConfirmFromName) {
		var ret string
		return ret
	}
	return *o.ConfirmFromName
}

// GetConfirmFromNameOk returns a tuple with the ConfirmFromName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmFromNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmFromName) {
		return nil, false
	}
	return o.ConfirmFromName, true
}

// HasConfirmFromName returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmFromName() bool {
	if o != nil && !IsNil(o.ConfirmFromName) {
		return true
	}

	return false
}

// SetConfirmFromName gets a reference to the given string and assigns it to the ConfirmFromName field.
func (o *ListRequest) SetConfirmFromName(v string) {
	o.ConfirmFromName = &v
}

// GetConfirmFromEmail returns the ConfirmFromEmail field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmFromEmail() string {
	if o == nil || IsNil(o.ConfirmFromEmail) {
		var ret string
		return ret
	}
	return *o.ConfirmFromEmail
}

// GetConfirmFromEmailOk returns a tuple with the ConfirmFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmFromEmail) {
		return nil, false
	}
	return o.ConfirmFromEmail, true
}

// HasConfirmFromEmail returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmFromEmail() bool {
	if o != nil && !IsNil(o.ConfirmFromEmail) {
		return true
	}

	return false
}

// SetConfirmFromEmail gets a reference to the given string and assigns it to the ConfirmFromEmail field.
func (o *ListRequest) SetConfirmFromEmail(v string) {
	o.ConfirmFromEmail = &v
}

// GetConfirmMailSubject returns the ConfirmMailSubject field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmMailSubject() string {
	if o == nil || IsNil(o.ConfirmMailSubject) {
		var ret string
		return ret
	}
	return *o.ConfirmMailSubject
}

// GetConfirmMailSubjectOk returns a tuple with the ConfirmMailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmMailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmMailSubject) {
		return nil, false
	}
	return o.ConfirmMailSubject, true
}

// HasConfirmMailSubject returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmMailSubject() bool {
	if o != nil && !IsNil(o.ConfirmMailSubject) {
		return true
	}

	return false
}

// SetConfirmMailSubject gets a reference to the given string and assigns it to the ConfirmMailSubject field.
func (o *ListRequest) SetConfirmMailSubject(v string) {
	o.ConfirmMailSubject = &v
}

// GetConfirmMailMessage returns the ConfirmMailMessage field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmMailMessage() string {
	if o == nil || IsNil(o.ConfirmMailMessage) {
		var ret string
		return ret
	}
	return *o.ConfirmMailMessage
}

// GetConfirmMailMessageOk returns a tuple with the ConfirmMailMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmMailMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmMailMessage) {
		return nil, false
	}
	return o.ConfirmMailMessage, true
}

// HasConfirmMailMessage returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmMailMessage() bool {
	if o != nil && !IsNil(o.ConfirmMailMessage) {
		return true
	}

	return false
}

// SetConfirmMailMessage gets a reference to the given string and assigns it to the ConfirmMailMessage field.
func (o *ListRequest) SetConfirmMailMessage(v string) {
	o.ConfirmMailMessage = &v
}

// GetConfirmSuccessPage returns the ConfirmSuccessPage field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmSuccessPage() string {
	if o == nil || IsNil(o.ConfirmSuccessPage) {
		var ret string
		return ret
	}
	return *o.ConfirmSuccessPage
}

// GetConfirmSuccessPageOk returns a tuple with the ConfirmSuccessPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmSuccessPageOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmSuccessPage) {
		return nil, false
	}
	return o.ConfirmSuccessPage, true
}

// HasConfirmSuccessPage returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmSuccessPage() bool {
	if o != nil && !IsNil(o.ConfirmSuccessPage) {
		return true
	}

	return false
}

// SetConfirmSuccessPage gets a reference to the given string and assigns it to the ConfirmSuccessPage field.
func (o *ListRequest) SetConfirmSuccessPage(v string) {
	o.ConfirmSuccessPage = &v
}

// GetConfirmSender returns the ConfirmSender field value if set, zero value otherwise.
func (o *ListRequest) GetConfirmSender() string {
	if o == nil || IsNil(o.ConfirmSender) {
		var ret string
		return ret
	}
	return *o.ConfirmSender
}

// GetConfirmSenderOk returns a tuple with the ConfirmSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRequest) GetConfirmSenderOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmSender) {
		return nil, false
	}
	return o.ConfirmSender, true
}

// HasConfirmSender returns a boolean if a field has been set.
func (o *ListRequest) HasConfirmSender() bool {
	if o != nil && !IsNil(o.ConfirmSender) {
		return true
	}

	return false
}

// SetConfirmSender gets a reference to the given string and assigns it to the ConfirmSender field.
func (o *ListRequest) SetConfirmSender(v string) {
	o.ConfirmSender = &v
}

func (o ListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SendThankYouMail) {
		toSerialize["sendThankYouMail"] = o.SendThankYouMail
	}
	if !IsNil(o.ThankYouFromName) {
		toSerialize["thankYouFromName"] = o.ThankYouFromName
	}
	if !IsNil(o.ThankYouFromEmail) {
		toSerialize["thankYouFromEmail"] = o.ThankYouFromEmail
	}
	if !IsNil(o.ThankYouMailSubject) {
		toSerialize["thankYouMailSubject"] = o.ThankYouMailSubject
	}
	if !IsNil(o.ThankYouMailMessage) {
		toSerialize["thankYouMailMessage"] = o.ThankYouMailMessage
	}
	if !IsNil(o.ThankYouSender) {
		toSerialize["thankYouSender"] = o.ThankYouSender
	}
	if !IsNil(o.ConfirmFromName) {
		toSerialize["confirmFromName"] = o.ConfirmFromName
	}
	if !IsNil(o.ConfirmFromEmail) {
		toSerialize["confirmFromEmail"] = o.ConfirmFromEmail
	}
	if !IsNil(o.ConfirmMailSubject) {
		toSerialize["confirmMailSubject"] = o.ConfirmMailSubject
	}
	if !IsNil(o.ConfirmMailMessage) {
		toSerialize["confirmMailMessage"] = o.ConfirmMailMessage
	}
	if !IsNil(o.ConfirmSuccessPage) {
		toSerialize["confirmSuccessPage"] = o.ConfirmSuccessPage
	}
	if !IsNil(o.ConfirmSender) {
		toSerialize["confirmSender"] = o.ConfirmSender
	}
	return toSerialize, nil
}

type NullableListRequest struct {
	value *ListRequest
	isSet bool
}

func (v NullableListRequest) Get() *ListRequest {
	return v.value
}

func (v *NullableListRequest) Set(val *ListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRequest(val *ListRequest) *NullableListRequest {
	return &NullableListRequest{value: val, isSet: true}
}

func (v NullableListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


