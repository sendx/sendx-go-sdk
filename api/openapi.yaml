openapi: 3.1.0
info:
  contact:
    email: hello@sendx.io
    name: SendX API Support
    url: https://sendx.io
  description: |
    # SendX REST API Documentation

    ## 🚀 Introduction

    The SendX API is organized around REST principles. Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.

    **Key Features:**
    - 🔒 **Security**: Team-based authentication with optional member-level access
    - 🎯 **Resource-Oriented**: RESTful design with clear resource boundaries
    - 📊 **Rich Data Models**: Three-layer model system (Input/Output/Internal)
    - 🔗 **Relationships**: Automatic prefix handling for resource relationships
    - 📈 **Scalable**: Built for high-volume email marketing operations

    ## 🏗️ Architecture Overview

    SendX uses a three-layer model architecture:

    1. **Input Models** (`RestE*`): For API requests
    2. **Output Models** (`RestR*`): For API responses with prefixed IDs
    3. **Internal Models**: Core business logic (not exposed in API)

    ## 🔐 Security & Authentication

    SendX uses API key authentication:

    ### Team API Key
    ```http
    X-Team-ApiKey: YOUR_TEAM_API_KEY
    ```
    - **Required for all requests**
    - Team-level access to resources
    - Available in SendX Settings → Team API Key

    ## 🆔 Encrypted ID System

    SendX uses encrypted IDs for security and better developer experience:

    - **Internal IDs**: Sequential integers (not exposed)
    - **Encrypted IDs**: 22-character alphanumeric strings
    - **Prefixed IDs**: Resource-type prefixes in API responses (`contact_<22-char-id>`)

    ### ID Format

    **All resource IDs follow this pattern:**
    ```
    <resource_prefix>_<22_character_alphanumeric_string>
    ```

    **Example:**
    ```json
    {
      "id": "contact_BnKjkbBBS500CoBCP0oChQ",
      "lists": ["list_OcuxJHdiAvujmwQVJfd3ss", "list_0tOFLp5RgV7s3LNiHrjGYs"],
      "tags": ["tag_UhsDkjL772Qbj5lWtT62VK", "tag_fL7t9lsnZ9swvx2HrtQ9wM"]
    }
    ```

    ## 📚 Resource Prefixes

    | Resource | Prefix | Example |
    |----------|--------|---------|
    | Contact | `contact_` | `contact_BnKjkbBBS500CoBCP0oChQ` |
    | Campaign | `campaign_` | `campaign_LUE9BTxmksSmqHWbh96zsn` |
    | List | `list_` | `list_OcuxJHdiAvujmwQVJfd3ss` |
    | Tag | `tag_` | `tag_UhsDkjL772Qbj5lWtT62VK` |
    | Sender | `sender_` | `sender_4vK3WFhMgvOwUNyaL4QxCD` |
    | Template | `template_` | `template_f3lJvTEhSjKGVb5Lwc5SWS` |
    | Custom Field | `field_` | `field_MnuqBAG2NPLm7PZMWbjQxt` |
    | Webhook | `webhook_` | `webhook_9l154iiXlZoPo7vngmamee` |
    | Post | `post_` | `post_XyZ123aBc456DeF789GhI` |
    | Post Category | `post_category_` | `post_category_YzS1wOU20yw87UUHKxMzwn` |
    | Post Tag | `post_tag_` | `post_tag_123XyZ456AbC` |
    | Member | `member_` | `member_JkL012MnO345PqR678` |

    ## 🎯 Best Practices

    ### Error Handling
    - **Always check status codes**: 2xx = success, 4xx = client error, 5xx = server error
    - **Read error messages**: Descriptive messages help debug issues
    - **Handle rate limits**: Respect API rate limits for optimal performance

    ### Data Validation
    - **Email format**: Must be valid email addresses
    - **Required fields**: Check documentation for mandatory fields
    - **Field lengths**: Respect maximum length constraints

    ### Performance
    - **Pagination**: Use offset/limit for large datasets
    - **Batch operations**: Process multiple items when supported
    - **Caching**: Cache responses when appropriate

    ## 🛠️ SDKs & Integration

    Official SDKs available for:
    - [Golang](https://github.com/sendx/sendx-go-sdk)
    - [Python](https://github.com/sendx/sendx-python-sdk)
    - [Ruby](https://github.com/sendx/sendx-ruby-sdk)
    - [Java](https://github.com/sendx/sendx-java-sdk)
    - [PHP](https://github.com/sendx/sendx-php-sdk)
    - [JavaScript](https://github.com/sendx/sendx-javascript-sdk)

    ## 📞 Support

    Need help? Contact us:
    - 💬 **Website Chat**: Available on sendx.io
    - 📧 **Email**: hello@sendx.io
    - 📚 **Documentation**: Full guides at help.sendx.io

    ---

    **API Endpoint:** `https://api.sendx.io/api/v1/rest`

    [<img src="https://run.pstmn.io/button.svg" alt="Run In Postman" style="width: 128px; height: 32px;">](https://god.gw.postman.com/run-collection/33476323-44b198b0-5219-4619-a01f-cfc24d573885?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D33476323-44b198b0-5219-4619-a01f-cfc24d573885%26entityType%3Dcollection%26workspaceId%3D6b1e4f65-96a9-4136-9512-6266c852517e)
  license:
    name: Proprietary
    url: https://sendx.io/terms
  title: SendX REST API
  version: 1.0.0
servers:
- description: Production server
  url: https://api.sendx.io/api/v1/rest
- description: Staging server
  url: https://stag1.sendx.io/api/v1/rest
security:
- TeamApiKey: []
tags:
- description: |
    **Contact Management**

    Contacts are the core of your SendX account. They represent your customers, leads, or any person you wish to communicate with through marketing campaigns.

    **Key Features:**
    - ✅ Create, read, update, and delete contacts
    - 🏷️ Associate with lists and tags
    - 📝 Store custom field data
    - 📊 Track engagement metrics
    - 🔒 Team-based access control

    **Business Rules:**
    - Email addresses must be unique within a team
    - Custom fields are created automatically if they don't exist
    - Tags are created automatically when assigned
    - Soft deletes preserve historical data
  name: Contact
- description: |
    **Campaign Management**

    Campaigns allow you to send targeted email marketing messages to your contacts.

    **Key Features:**
    - 📧 Create and manage email campaigns
    - 🎯 Target specific lists and segments
    - 📊 Track campaign performance
    - ⏰ Schedule campaigns for future delivery
    - 🔄 A/B testing support
  name: Campaign
- description: |
    **List Management**

    Lists help you organize contacts into groups for targeted messaging.

    **Key Features:**
    - 📁 Create and manage contact lists
    - 👥 Bulk operations on list members
    - 🔗 Associate with campaigns
    - 📊 Track list growth metrics
  name: List
- description: |
    **Tag Management**

    Tags provide flexible contact categorization for advanced segmentation.

    **Key Features:**
    - 🏷️ Create and manage tags
    - 🔍 Advanced contact filtering
    - 🎯 Behavior-based tagging
    - 📊 Tag-based analytics
  name: Tag
- description: |
    **Sender Management**

    Manage verified sender addresses for your campaigns.

    **Key Features:**
    - ✉️ Add and verify sender addresses
    - 🔐 Domain authentication
    - 📧 Default sender settings
  name: Sender
- description: |
    **Email Template Management**

    Create and manage reusable email templates for campaigns.

    **Key Features:**
    - 🎨 HTML and text templates
    - 🔄 Reusable across campaigns
    - 📱 Mobile-responsive designs
    - 🏷️ Personalization support
  name: Template
- description: |
    **Custom Field Management**

    Define custom data fields for storing additional contact information.

    **Key Features:**
    - 📝 Create custom data fields
    - 🔢 Support for various data types
    - 📊 Use in segmentation
    - 🔄 Bulk updates
  name: Custom Field
- description: |
    **Webhook Management**

    Configure webhooks to receive real-time event notifications.

    **Key Features:**
    - 🔔 Real-time event notifications
    - 🎯 Event filtering
    - 🔒 Secure payload delivery
    - 📊 Delivery status tracking
  name: Webhook
- description: |
    **Email Sending APIs**

    Send transactional and marketing emails programmatically.

    **Key Features:**
    - 📧 Send individual emails
    - 🎨 Template-based sending
    - 📎 Attachment support
    - 🔄 Personalization variables
  name: Email Sending
- description: |
    **Event Tracking**

    Track custom events and revenue data for advanced analytics.

    **Key Features:**
    - 📊 Custom event tracking
    - 💰 Revenue attribution
    - 🔗 Integration with analytics
    - 📈 Conversion tracking
  name: Events
- description: |
    **Contact Tracking APIs**

    Legacy tracking endpoints for backward compatibility.

    **Key Features:**
    - 👤 Identify contacts
    - 🏷️ Track contact behavior
    - 📊 Update contact properties
    - ⚠️ Consider using newer endpoints
  name: Tracking
- description: |
    **Reporting APIs**

    Access detailed reports and analytics data.

    **Key Features:**
    - 📊 Campaign performance metrics
    - 📈 Engagement analytics
    - 💰 Revenue reports
    - 📉 Trend analysis
  name: Report
- description: |
    **Blog Post Management**

    Manage blog posts and content for your marketing efforts.

    **Key Features:**
    - 📝 Create and manage posts
    - 🏷️ Categorize with tags
    - 📁 Organize by categories
    - 🔍 SEO optimization
  name: Post
- description: |
    **Post Category Management**

    Organize blog posts into categories.

    **Key Features:**
    - 📁 Create categories
    - 🔗 Associate posts
    - 📊 Category analytics
  name: Post Category
- description: |
    **Post Tag Management**

    Tag blog posts for better organization and discovery.

    **Key Features:**
    - 🏷️ Create post tags
    - 🔍 Improve discoverability
    - 📊 Tag-based filtering
  name: Post Tag
- description: |
    **Team Member Information**

    Access team member details (read-only).

    **Key Features:**
    - 👤 View member profiles
    - 📧 Access member information
    - 🔒 Read-only access
  name: Team Member
paths:
  /send/email:
    post:
      description: |
        Sends transactional emails to specified recipients with support for personalization, attachments, and tracking.
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XEmailMessage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XEmailResponse'
                type: array
          description: ✅ Email sent successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Send transactional email
      tags:
      - Email Sending
  /send/template:
    post:
      description: |
        Sends emails using a pre-defined template with variable substitution.
      operationId: sendEmailWithTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateEmailMessage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XEmailResponse'
                type: array
          description: ✅ Email sent successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          description: Template not found
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Send email using template
      tags:
      - Email Sending
  /contact:
    get:
      description: |
        Retrieves a paginated list of all contacts in your team with optional filtering capabilities.

        **🎯 Key Features:**
        - Pagination support with offset/limit
        - Search contacts by name or email
        - All relationships included (lists, tags, custom fields)
        - Prefixed IDs for easy integration

        **📊 Pagination:**
        - Default limit: 10 contacts per page
        - Maximum limit: 100 contacts per page
        - Use offset for page navigation

        **🔍 Search:**
        - Searches across firstName, lastName, and email fields
        - Case-insensitive partial matching
        - Combine with pagination for large datasets
      operationId: getAllContacts
      parameters:
      - description: |
          Number of records to skip for pagination.

          **Examples:**
          - `0` - First page (default)
          - `50` - Second page (with limit=50)
          - `100` - Third page (with limit=50)
        examples:
          first_page:
            summary: First page
            value: 0
          second_page:
            summary: Second page (50 records per page)
            value: 50
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |
          Maximum number of records to return.

          **Constraints:**
          - Minimum: 1
          - Maximum: 100
          - Default: 10
        examples:
          small_batch:
            summary: Small batch
            value: 10
          standard_batch:
            summary: Standard batch
            value: 50
          large_batch:
            summary: Large batch
            value: 200
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: |
          Search term to filter contacts by name or email.

          **Search Behavior:**
          - Searches firstName, lastName, and email fields
          - Case-insensitive partial matching
          - Minimum 2 characters for search

          **Examples:**
          - `john` - Finds "John Doe", "johnson@example.com"
          - `@company.com` - Finds all emails from company.com
          - `smith` - Finds "John Smith", "smith@email.com"
        examples:
          name_search:
            summary: Search by name
            value: john
          email_domain_search:
            summary: Search by email domain
            value: '@company.com'
          partial_match:
            summary: Partial name match
            value: smith
        explode: true
        in: query
        name: search
        required: false
        schema:
          maxLength: 255
          minLength: 2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                contact_list:
                  summary: List of contacts with relationships
                  value:
                  - id: contact_BnKjkbBBS500CoBCP0oChQ
                    firstName: John
                    lastName: Doe
                    email: john.doe@example.com
                    company: Example Corp
                    customFields:
                      field_MnuqBAG2NPLm7PZMWbjQxt: Sales
                      field_QqfhckbdcvQinLPlduIbHq: Manager
                    lists:
                    - list_OcuxJHdiAvujmwQVJfd3ss
                    - list_0tOFLp5RgV7s3LNiHrjGYs
                    tags:
                    - tag_6GN4DNyrHNt4KktCNG8PDO
                    - tag_UhsDkjL772Qbj5lWtT62VK
                    unsubscribed: false
                    bounced: false
                    spam: false
                    blocked: false
                    dropped: false
                    created: 2024-01-10T14:20:00Z
                    updated: 2024-01-15T09:15:00Z
                    trackData: utm_source=website
                    contactSource: 1
                    pageSource: https://example.com/signup
                    lastTrackedIp: 203.0.113.42
                    ltv: 1500
                  - id: contact_AXCZG3Ii9bjBoUUINcSqo8
                    firstName: Jane
                    lastName: Smith
                    email: jane.smith@company.com
                    company: Tech Solutions
                    customFields:
                      field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
                    lists:
                    - list_OcuxJHdiAvujmwQVJfd3ss
                    tags:
                    - tag_fL7t9lsnZ9swvx2HrtQ9wM
                    unsubscribed: false
                    bounced: false
                    spam: false
                    blocked: false
                    dropped: false
                    created: 2024-01-12T16:45:00Z
                    updated: 2024-01-12T16:45:00Z
                    trackData: ""
                    contactSource: 2
                    pageSource: ""
                    lastTrackedIp: 198.51.100.25
                    ltv: 0
              schema:
                items:
                  $ref: '#/components/schemas/RestRContact'
                type: array
          description: ✅ Contacts retrieved successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all contacts
      tags:
      - Contact
    post:
      description: |
        Creates a new contact in your SendX team with the provided information.

        **🎯 Key Features:**
        - Email validation and duplicate detection
        - Automatic relationship building with lists and tags
        - Smart custom field handling

        **📋 Business Rules:**
        - Email is mandatory and must be unique within the team
        - Last tracked IP is stored for analytics
      operationId: createContact
      requestBody:
        content:
          application/json:
            examples:
              minimal_contact:
                description: Create a contact with just the required email field
                summary: 🚀 Quick Start - Minimal Contact
                value:
                  email: john.doe@example.com
              basic_contact:
                description: Create a contact with email and name information
                summary: 📝 Basic Contact with Name
                value:
                  email: jane.smith@company.com
                  firstName: Jane
                  lastName: Smith
                  company: Tech Solutions Inc
              complete_contact:
                description: "Create a fully-featured contact with custom fields,\
                  \ lists, and tags"
                summary: 🎯 Complete Contact with Relationships
                value:
                  email: alex.johnson@enterprise.com
                  firstName: Alex
                  lastName: Johnson
                  company: Enterprise Corp
                  customFields:
                    field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
                    field_QqfhckbdcvQinLPlduIbHq: Senior
                    field_rMMSPH9VCIN4NP4CHUyFGH: Premium
                  lists:
                  - list_OcuxJHdiAvujmwQVJfd3ss
                  tags:
                  - tag_UhsDkjL772Qbj5lWtT62VK
                  lastTrackedIp: 192.168.1.100
              marketing_lead:
                description: Typical marketing lead with campaign attribution
                summary: 📊 Marketing Lead Example
                value:
                  email: lead@startup.com
                  firstName: Marketing
                  lastName: Lead
                  company: Startup Inc
                  customFields:
                    field_MnuqBAG2NPLm7PZMWbjQxt: Google Ads
                    field_QqfhckbdcvQinLPlduIbHq: Q1-2024-Growth
                    field_rMMSPH9VCIN4NP4CHUyFGH: $10000
                  lists:
                  - list_vUCjsUmrVXtSppS8rD0Ssq
                  tags:
                  - tag_fL7t9lsnZ9swvx2HrtQ9wM
                  - tag_6GN4DNyrHNt4KktCNG8PDO
                  lastTrackedIp: 203.0.113.42
            schema:
              $ref: '#/components/schemas/RestEContact'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRContact'
          description: ✅ Contact created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "409":
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create a new contact
      tags:
      - Contact
  /contact/{identifier}:
    delete:
      description: |
        Soft deletes a contact from your team.

        **🎯 Key Features:**
        - Soft delete preserves data
        - Removes from all lists
        - Cancels pending campaigns
        - Maintains historical data
      operationId: deleteContact
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              examples:
                deletion_success:
                  summary: Successful contact deletion
                  value:
                    status: success
                    message: contact  (jane.smith@company.com) has been deleted successfully
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Contact deleted successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete contact
      tags:
      - Contact
    get:
      description: |
        Retrieves detailed information about a specific contact.

        **🎯 Key Features:**
        - Returns complete contact profile
        - Includes all lists and tags
        - Shows custom field values
        - Provides engagement metrics
      operationId: getContact
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              examples:
                full_contact_profile:
                  summary: Complete contact profile
                  value:
                    id: contact_BnKjkbBBS500CoBCP0oChQ
                    firstName: Alexander
                    lastName: Johnson
                    email: alex.johnson@enterprise.com
                    company: Enterprise Solutions Inc
                    customFields:
                      field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
                      field_QqfhckbdcvQinLPlduIbHq: Senior Developer
                      field_rMMSPH9VCIN4NP4CHUyFGH: Premium
                      field_ImuqBAG2NPLm7PZMWbjQxt: $75000
                      field_RxfhckbdcvQinLPlduIbHq: "85"
                    lists:
                    - list_vUCjsUmrVXtSppS8rD0Ssq
                    - list_0tOFLp5RgV7s3LNiHrjGYs
                    - list_OcuxJHdiAvujmwQVJfd3ss
                    tags:
                    - tag_UhsDkjL772Qbj5lWtT62VK
                    - tag_LhsDkjL772Qbj5lWtT62VK
                    - tag_fL7t9lsnZ9swvx2HrtQ9wM
                    - tag_mL7t9lsnZ9swvx2HrtQ9wM
                    unsubscribed: false
                    bounced: false
                    spam: false
                    blocked: false
                    dropped: false
                    created: 2024-01-05T08:30:00Z
                    updated: 2024-01-20T15:45:00Z
                    trackData: utm_source=google&utm_campaign=enterprise&utm_medium=cpc
                    contactSource: 1
                    pageSource: https://enterprise.com/signup?ref=google-ads
                    lastTrackedIp: 203.0.113.100
                    ltv: 7500
              schema:
                $ref: '#/components/schemas/RestRContact'
          description: ✅ Contact retrieved successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get contact by ID
      tags:
      - Contact
    put:
      description: |
        Updates an existing contact's information.

        **🎯 Key Features:**
        - Partial updates supported
        - Add/remove lists and tags
        - Update custom fields
        - Change email address
      operationId: updateContact
      parameters:
      - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            examples:
              name_update:
                description: Simple name and company update
                summary: 📝 Update Name Information
                value:
                  firstName: Alexander
                  lastName: Johnson-Smith
                  company: New Enterprise Corp
              email_change:
                description: Update email address (must be unique)
                summary: ✉️ Change Email Address
                value:
                  email: alexander.johnson@newcompany.com
                  company: New Company Inc
              add_custom_fields:
                description: Add or update custom field information
                summary: 📊 Add Custom Field Data
                value:
                  customFields:
                    field_QqfhckbdcvQinLPlduIbHq: "92"
                    field_rMMSPH9VCIN4NP4CHUyFGH: 2024-01-20
                    field_MnuqBAG2NPLm7PZMWbjQxt: "High-value prospect, follow up\
                      \ Q2"
              relationship_update:
                description: Change list and tag associations
                summary: 🏷️ Update Lists and Tags
                value:
                  lists:
                  - list_0tOFLp5RgV7s3LNiHrjGYs
                  - list_vUCjsUmrVXtSppS8rD0Ssq
                  tags:
                  - tag_6GN4DNyrHNt4KktCNG8PDO
                  - tag_UhsDkjL772Qbj5lWtT62VK
                  - tag_UhsDkjL772Qbj5lWtT62VK
              complete_update:
                description: Update multiple aspects of the contact
                summary: 🎯 Complete Profile Update
                value:
                  firstName: Alex
                  lastName: Johnson
                  company: Enterprise Solutions LLC
                  customFields:
                    field_MnuqBAG2NPLm7PZMWbjQxt: CTO Office
                    field_rMMSPH9VCIN4NP4CHUyFGH: $100000
                    field_QqfhckbdcvQinLPlduIbHq: "true"
                  lists:
                  - list_OcuxJHdiAvujmwQVJfd3ss
                  - list_0tOFLp5RgV7s3LNiHrjGYs
                  tags:
                  - tag_fL7t9lsnZ9swvx2HrtQ9wM
                  - tag_UhsDkjL772Qbj5lWtT62VK
                  - tag_high_budget
                  lastTrackedIp: 203.0.113.150
            schema:
              $ref: '#/components/schemas/RestEContact'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                updated_contact:
                  summary: Successfully updated contact
                  value:
                    id: contact_BnKjkbBBS500CoBCP0oChQ
                    firstName: Alex
                    lastName: Johnson
                    email: alex.johnson@enterprise.com
                    company: Enterprise Solutions LLC
                    customFields:
                      field_MnuqBAG2NPLm7PZMWbjQxt: CTO Office
                      field_QqfhckbdcvQinLPlduIbHq: Senior Developer
                      field_rMMSPH9VCIN4NP4CHUyFGH: $100000
                      field_LqfhckbdcvQinLPlduIbHq: "true"
                    lists:
                    - list_OcuxJHdiAvujmwQVJfd3ss
                    - list_0tOFLp5RgV7s3LNiHrjGYs
                    tags:
                    - tag_fL7t9lsnZ9swvx2HrtQ9wM
                    - tag_UhsDkjL772Qbj5lWtT62VK
                    - tag_LesDkjL772Qbj5lWtT62VK
                    unsubscribed: false
                    bounced: false
                    spam: false
                    blocked: false
                    dropped: false
                    created: 2024-01-05T08:30:00Z
                    updated: 2024-01-21T10:15:00Z
                    trackData: utm_source=google&utm_campaign=enterprise
                    contactSource: 1
                    pageSource: https://enterprise.com/signup
                    lastTrackedIp: 203.0.113.150
                    ltv: 7500
              schema:
                $ref: '#/components/schemas/RestRContact'
          description: ✅ Contact updated successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update contact
      tags:
      - Contact
  /contact/unsubscribe/{identifier}:
    post:
      description: |
        Unsubscribes a contact from all marketing communications.

        **🎯 Key Features:**
        - Marks contact as unsubscribed
        - Removes from all active campaigns
        - Maintains unsubscribe history
        - Complies with anti-spam regulations
      operationId: unsubscribeContact
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ✅ Contact unsubscribed successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Unsubscribe contact
      tags:
      - Contact
  /contact/identify:
    post:
      description: |
        Legacy endpoint for identifying contacts. Creates or updates a contact.


        **🎯 Key Features:**
        - Creates contact if doesn't exist
        - Updates if email already exists
        - Supports custom fields and tags
      operationId: identifyContact
      requestBody:
        content:
          application/json:
            examples:
              minimal_identify:
                description: Identify a contact with just the required email field
                summary: 🚀 Quick Start - Minimal Identify
                value:
                  email: john.doe@example.com
              complete_identify:
                description: Identify a contact with email and name information
                summary: 📝 Complete Identify with Name
                value:
                  email: jane.smith@company.com
                  firstName: Jane
                  lastName: Smith
                  company: Tech Solutions Inc
                  customFields:
                    Role: Engineering
                    Position: Senior
                    Plan: Premium
                  tags:
                  - new_user
            schema:
              $ref: '#/components/schemas/IdentifyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifyResponse'
          description: ✅ Contact identified successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Identify contact
      tags:
      - Tracking
  /contact/track:
    post:
      description: |
        Legacy endpoint for tracking contact behavior through tags.


        **🎯 Key Features:**
        - Add or remove tags
        - Trigger automations
        - Track user behavior
      operationId: trackContact
      requestBody:
        content:
          application/json:
            examples:
              track_request:
                value:
                  email: test@example.com
                  addTags:
                  - new
                  - cool
                  removeTags:
                  - old
                  - bad
            schema:
              $ref: '#/components/schemas/TrackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackResponse'
          description: ✅ Contact tracked successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Track contact
      tags:
      - Tracking
  /campaign:
    get:
      description: |
        Retrieves a paginated list of all campaigns.
      operationId: getAllCampaigns
      parameters:
      - description: Number of campaigns to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of campaigns to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Filter by campaign type
        explode: true
        in: query
        name: campaignType
        required: false
        schema:
          default: all
          enum:
          - all
          - draft
          - scheduled
          - sent
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                campaign_list:
                  summary: List of campaigns with various statuses
                  value:
                  - id: campaign_IMBoxK2iB5sUdgiNOjqAMA
                    name: March Newsletter
                    status: 3
                    subject: "March Updates from {{company.name}}"
                    preheader: Spring is here - Don't miss our latest updates!
                    sender: sender_xY4nBk89vL2PqR0mT7hEwJ
                    scheduleType: 1
                    scheduleCondition: 2025-03-15
                    scheduleTime: 2025-03-15T14:00:00Z
                    scheduleTimezone: America/New_York
                    includedLists:
                    - list_A1b2C3d4E5f6G7h8I9j0Kl
                    - list_Mn7Op8Qr9St0Uv1Wx2Yz3A
                    excludedTags:
                    - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
                    smartSend: true
                    sendInContactsTimezone: false
                    preferredTimeCondition: 09:00 AM
                    preferredTimezone: America/New_York
                    campaignScreenshotUrl: https://cdn.sendx.io/campaigns/march_newsletter.png
                  - id: campaign_Jexkb4tu7FoPJ4dvJDQYS5
                    name: Welcome Series - Email 1
                    status: 1
                    subject: "Welcome to {{company.name}}!"
                    sender: sender_Po9Lq8RmTz7WvXy0Ab1CdE
                    scheduleType: 0
                    includedTags:
                    - tag_Df9Gh0JkLm2Np3QrSt5UvW
                    isArchived: false
                    smartSend: false
                  - id: campaign_6h8DnYrHt4KktCnG8PDO5Z
                    name: Flash Sale - 24 Hours Only
                    status: 2
                    subject: ⏰ 24 Hour Flash Sale – Up to 70% Off!
                    sender: sender_Jk8Lm0NpQr2StUvWx3Yz4A
                    scheduleType: 1
                    scheduleCondition: 2025-08-05
                    scheduleTime: 2025-08-05T09:00:00Z
                    scheduleTimezone: Asia/Kolkata
                    includedLists:
                    - list_Ty6UvWx7Yz8A9Bc0De1FgH
                    includedTags:
                    - tag_Op9QrSt0Uv1Wx2Yz3AbCdE
                    excludedLists:
                    - list_Xy3Zb4C5De6Fg7Hi8Jk9Lm
                    sendInContactsTimezone: true
                    preferredTimeCondition: 10:00 AM
                    preferredTimezone: Asia/Kolkata
                    strategy: Batch Sending
                    smartSend: true
                  - id: campaign_Mo5Np6Qr7St8Uv9WxYz0Ab
                    name: Customer Re-Engagement
                    status: 4
                    subject: We miss you – Here’s 20% off to come back
                    sender: sender_Np3QrSt5UvWx7Yz8Ab9CdE
                    scheduleType: 2
                    includedSegments:
                    - segment_Gh8Ij9Kl0Mn1Op2Qr3StUv
                    excludedSegments:
                    - segment_Xy0Za1Bc2De3Fg4Hi5JkLm
                    strategy: Time-Optimized
                    smartSend: false
              schema:
                items:
                  $ref: '#/components/schemas/RestRCampaign'
                type: array
          description: ✅ Campaigns retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all campaigns
      tags:
      - Campaign
    post:
      description: |
        Creates a new email campaign.
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            examples:
              immediate_campaign:
                summary: 🚀 Send Immediately Campaign
                value:
                  name: Flash Sale Announcement
                  subject: "⚡ 24-Hour Flash Sale - {{contact.firstName}}, Save 50%!"
                  sender: sender_4vK3WFhMgvOwUNyaL4QxCD
                  previewText: Limited time offer - Today only!
                  htmlCode: "<html><body><h1>Flash Sale!</h1><p>Hi {{contact.firstName}},</p><p>Don't\
                    \ miss our 24-hour flash sale!</p><a href='{{sale.url}}'>Shop\
                    \ Now</a></body></html>"
                  plainText: |-
                    Flash Sale!

                    Hi {{contact.firstName}},

                    Don't miss our 24-hour flash sale!

                    Shop now: {{sale.url}}
                  scheduleType: 1
                  includedLists:
                  - list_0tOFLp5RgV7s3LNiHrjGYs
                  - list_vUCjsUmrVXtSppS8rD0Ssq
                  excludedTags:
                  - tag_unengaged
              scheduled_newsletter:
                summary: 📅 Scheduled Newsletter
                value:
                  name: Monthly Newsletter - March 2024
                  subject: "{{company.name}} March Newsletter"
                  sender: sender_lN1aAQOmYEUp4LtH5szP3l
                  previewText: "Product updates, tips, and special offers inside"
                  htmlCode: "<html><head><style>.newsletter{max-width:600px;margin:0\
                    \ auto;}</style></head><body><div class='newsletter'><h1>March\
                    \ Newsletter</h1>{{newsletter.content}}</div></body></html>"
                  plainText: |-
                    March Newsletter

                    {{newsletter.content.text}}
                  scheduleType: 0
                  scheduleCondition: 2024-03-01
                  timeCondition: 9:00 AM
                  timezone: America/New_York
                  includedLists:
                  - list_0tOFLp5RgV7s3LNiHrjGYs
                  excludedLists:
                  - list_A1b2C3d4E5f6G7h8I9j0Kl
                  sendInContactsTimezone: false
              targeted_segment_campaign:
                summary: 🎯 Targeted Segment Campaign
                value:
                  name: VIP Customer Exclusive Offer
                  subject: "Exclusive VIP Offer - {{contact.firstName}}, You're Invited!"
                  sender: sender_jAf07DHbIQfHfpefQqoKCP
                  previewText: Special pricing available only for our VIP members
                  htmlCode: "<html><body><div class='vip-offer'><h1>VIP Exclusive</h1><p>As\
                    \ a valued VIP member, enjoy 30% off...</p></div></body></html>"
                  plainText: |-
                    VIP Exclusive

                    As a valued VIP member, enjoy 30% off...
                  scheduleType: 1
                  includedTags:
                  - tag_6GN4DNyrHNt4KktCNG8PDO
                  - tag_fL7t9lsnZ9swvx2HrtQ9wM
                  includedSegments:
                  - segment_6GN4DNyrHNt4KktCNG8PDO
                  excludedTags:
                  - segment_6GN4DNyrHNt4KktCNG8PDO
                  smartSend: true
                  sendInContactsTimezone: true
                  preferredTimeCondition: 10:00 AM
                  preferredTimezone: America/Los_Angeles
            schema:
              $ref: '#/components/schemas/RestECampaign'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRCampaign'
          description: ✅ Campaign created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create campaign
      tags:
      - Campaign
  /campaign/{identifier}:
    delete:
      description: |
        Deletes a campaign.
      operationId: deleteCampaign
      parameters:
      - description: Campaign identifier to delete
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(campaign_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Campaign deleted successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete campaign
      tags:
      - Campaign
    get:
      description: |
        Retrieves detailed information about a specific campaign.
      operationId: getCampaign
      parameters:
      - description: |
          Campaign identifier
          - `campaign_IMBoxK2iB5sUdgiNOjqAMA`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(campaign_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                scheduled_campaign:
                  value:
                    id: campaign_LUE9BTxmksSmqHWbh96zsn
                    name: Spring Sale Campaign
                    trackReply: true
                    status: 1
                    scheduleType: 0
                    scheduleCondition: 2024-03-20
                    timeCondition: 10:00 PM
                    timezone: America/New_York
                    preferredTimeCondition: 10:00 PM
                    preferredTimezone: America/New_York
                    strategy: Batch Sending
                    sendInContactsTimezone: true
                    smartSend: true
                    isArchived: false
                    sender: sender_lN1aAQOmYEUp4LtH5szP3l
                    campaignScreenshotUrl: https://cdn.sendx.io/campaigns/spring_sale_preview.png
                    includedLists:
                    - list_0tOFLp5RgV7s3LNiHrjGYs
                    - list_A1b2C3d4E5f6G7h8I9j0Kl
                    includedTags:
                    - tag_6GN4DNyrHNt4KktCNG8PDO
                    excludedTags:
                    - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
                    subject: 🌸 Spring Sale - Save up to 40%!
              schema:
                $ref: '#/components/schemas/RestRCampaign'
          description: ✅ Campaign retrieved successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get campaign by ID
      tags:
      - Campaign
  /list:
    get:
      description: |
        Retrieves all contact lists in your team.
      operationId: getAllLists
      parameters:
      - description: Number of records to skip for pagination
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: "Maximum number of lists to return (max: 500)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Search lists by name
        explode: true
        in: query
        name: search
        required: false
        schema:
          maxLength: 100
          minLength: 2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRList'
                type: array
          description: ✅ Lists retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all lists
      tags:
      - List
    post:
      description: |
        Creates a new contact list.
      operationId: createList
      requestBody:
        content:
          application/json:
            examples:
              basic_list:
                summary: 📝 Basic List with Name
                value:
                  name: Premium Members
            schema:
              $ref: '#/components/schemas/RestEList'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRList'
          description: ✅ List created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create list
      tags:
      - List
  /list/{identifier}:
    delete:
      description: |
        Deletes a list.
      operationId: deleteList
      parameters:
      - description: List identifier to delete
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(list_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ List deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete list
      tags:
      - List
    get:
      description: |
        Retrieves detailed information about a specific list.
      operationId: getList
      parameters:
      - description: |
          List identifier
          - `list_OcuxJHdiAvujmwQVJfd3ss`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(list_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRList'
          description: ✅ List retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get list by ID
      tags:
      - List
    put:
      description: |
        Updates an existing list's settings.
      operationId: updateList
      parameters:
      - description: List identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(list_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              update_name:
                summary: 📝 Update list name
                value:
                  name: 2024 Newsletter Subscribers
            schema:
              $ref: '#/components/schemas/RestEList'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRList'
          description: ✅ List updated successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update list
      tags:
      - List
  /tag:
    get:
      description: |
        Retrieves all tags in your team.
      operationId: getAllTags
      parameters:
      - description: Number of tags to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of tags to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                tags_list:
                  value:
                  - id: tag_abc123def456
                    name: VIP Customer
                    created: 2024-01-20T10:30:00Z
                    updated: 2024-01-20T10:30:00Z
                  - id: tag_def456ghi789
                    name: Newsletter Subscriber
                    created: 2024-01-15T14:20:00Z
                    updated: 2024-01-18T09:15:00Z
                  - id: tag_ghi789jkl012
                    name: Webinar Attendee
                    created: 2024-01-10T08:45:00Z
                    updated: 2024-01-10T08:45:00Z
              schema:
                items:
                  $ref: '#/components/schemas/RestRTag'
                type: array
          description: ✅ Tags retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all tags
      tags:
      - Tag
    post:
      description: |
        Creates a new tag for contact categorization.
      operationId: createTag
      requestBody:
        content:
          application/json:
            examples:
              basic_tag:
                summary: Basic tag creation
                value:
                  name: VIP Customer
              lifecycle_tag:
                summary: Customer lifecycle tag
                value:
                  name: "Lifecycle: Active Customer"
            schema:
              $ref: '#/components/schemas/RestETag'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRTag'
          description: ✅ Tag created successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create tag
      tags:
      - Tag
  /tag/{identifier}:
    delete:
      description: |
        Deletes a tag from the system.
      operationId: deleteTag
      parameters:
      - description: Tag identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Tag deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete tag
      tags:
      - Tag
    get:
      description: |
        Retrieves detailed information about a specific tag.
      operationId: getTag
      parameters:
      - description: Tag identifier to retrieve
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRTag'
          description: ✅ Tag retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get tag by ID
      tags:
      - Tag
    put:
      description: |
        Updates an existing tag's name.
      operationId: updateTag
      parameters:
      - description: Tag identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestETag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRTag'
          description: ✅ Tag updated successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update tag
      tags:
      - Tag
  /sender:
    get:
      description: |
        Retrieves all verified sender addresses.
      operationId: getAllSenders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRSender'
                type: array
          description: ✅ Senders retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all senders
      tags:
      - Sender
    post:
      description: |
        Adds a new sender email address.
      operationId: createSender
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestESender'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                personal_sender:
                  summary: Personal sender
                  value:
                    name: John Smith
                    email: john@example.com
                company_sender:
                  summary: Company sender
                  value:
                    name: Example Company
                    email: newsletter@example.com
                support_sender:
                  summary: Support team sender
                  value:
                    name: Support Team
                    email: support@example.com
              schema:
                $ref: '#/components/schemas/RestRSender'
          description: ✅ Sender created successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create sender
      tags:
      - Sender
  /template/email:
    get:
      description: |
        Retrieves all email templates.
      operationId: getAllEmailTemplates
      parameters:
      - description: |
          Number of records to skip for pagination.

          **Examples:**
          - `0` - First page (default)
          - `25` - Second page (with limit=25)
          - `50` - Third page (with limit=25)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |
          Maximum number of templates to return per page.

          **Guidelines:**
          - Default: 10 templates
          - Maximum: 100 templates
          - Recommended: 25-100 for optimal performance
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          Search templates by name (case-insensitive partial matching).

          **Examples:**
          - `newsletter` - Finds "Weekly Newsletter", "Monthly Newsletter"
          - `welcome` - Finds "Welcome Email", "New User Welcome"
          - `product` - Finds "Product Launch", "Product Update"
        explode: true
        in: query
        name: search
        required: false
        schema:
          maxLength: 100
          minLength: 2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRTemplate'
                type: array
          description: ✅ Templates retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all templates
      tags:
      - Template
    post:
      description: |
        Creates a new reusable email template.
      operationId: createEmailTemplate
      requestBody:
        content:
          application/json:
            examples:
              drag_drop_template:
                summary: 📱 Drag & Drop Newsletter Template
                value:
                  name: Weekly Newsletter Template
                  htmlCode: "<div class=\"newsletter\"><h1>{{company.name}} Weekly\
                    \ Update</h1><div class=\"content\">{{email.content}}</div></div>"
                  templateCode: "{\"type\":\"doc\",\"content\":[{\"type\":\"paragraph\"\
                    ,\"attrs\":{\"textAlign\":null,\"showIfKey\":null},\"content\"\
                    :[{\"type\":\"text\",\"text\":\"This is a new template\"}]}]}"
                  editorType: 1
              plain_text_template:
                summary: 📝 Simple Text Template
                value:
                  name: Welcome Email - Plain Text
                  htmlCode: "<p>Welcome to {{company.name}}!</p><p>{{welcome.message}}</p>"
                  editorType: 0
              advanced_html_template:
                summary: 🎨 Advanced HTML Template
                value:
                  name: E-commerce Product Showcase
                  htmlCode: "<html><head><style>.product{border:1px solid #ddd;padding:20px;}</style></head><body><div\
                    \ class=\"product\"><h2>{{product.name}}</h2><img src=\"{{product.image}}\"\
                    \ alt=\"Product\"><p>{{product.description}}</p><a href=\"{{product.url}}\"\
                    \ class=\"btn\">Shop Now</a></div></body></html>"
                  templateCode: "{\"type\":\"doc\",\"content\":[{\"type\":\"paragraph\"\
                    ,\"attrs\":{\"textAlign\":null,\"showIfKey\":null},\"content\"\
                    :[{\"type\":\"text\",\"text\":\"This is a new template\"}]}]}"
                  editorType: 2
            schema:
              $ref: '#/components/schemas/RestETemplate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRTemplate'
          description: ✅ Template created successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create email template
      tags:
      - Template
  /template/email/{identifier}:
    delete:
      description: |
        Deletes an email template.
      operationId: deleteEmailTemplate
      parameters:
      - description: |
          The unique template identifier to update.

          - `template_f3lJvTEhSjKGVb5Lwc5SWS`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: template_f3lJvTEhSjKGVb5Lwc5SWS
          pattern: "^(template_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Template deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete template
      tags:
      - Template
    get:
      description: |
        Retrieves a specific email template.
      operationId: getEmailTemplate
      parameters:
      - description: "The unique template identifier. \n- `template_f3lJvTEhSjKGVb5Lwc5SWS`\
          \ - Standard prefixed ID\n"
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: template_f3lJvTEhSjKGVb5Lwc5SWS
          pattern: "^(template_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRTemplate'
          description: ✅ Template retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get template by ID
      tags:
      - Template
    put:
      description: |
        Updates an existing email template.
      operationId: updateEmailTemplate
      parameters:
      - description: |
          The unique template identifier to update.

          - `template_f3lJvTEhSjKGVb5Lwc5SWS`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: template_f3lJvTEhSjKGVb5Lwc5SWS
          pattern: "^(template_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestETemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                update_newsletter:
                  summary: 📰 Update newsletter template design
                  value:
                    name: Weekly Newsletter Template v2
                    htmlCode: "<html><head><style>.newsletter{max-width:650px;margin:0\
                      \ auto;font-family:'Helvetica Neue',Arial,sans-serif}.header{background:linear-gradient(135deg,#667eea\
                      \ 0%,#764ba2 100%);color:white;padding:30px;text-align:center}</style></head><body><div\
                      \ class=\"newsletter\"><div class=\"header\"><h1>{{company.name}}</h1><p>Your\
                      \ Weekly Digest</p></div><div class=\"content\">{{email.content}}</div></div></body></html>"
                    templateCode: "{}"
                    editorType: 1
                upgrade_to_advanced:
                  summary: 🚀 Upgrade to advanced HTML editor
                  value:
                    name: Advanced Product Showcase
                    htmlCode: "<html><head><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"\
                      ><style>@media (max-width:600px){.product-grid{grid-template-columns:1fr!important}}.product-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:20px;padding:20px}</style></head><body><div\
                      \ class=\"product-grid\">{{#products}}<div class=\"product\"\
                      ><img src=\"{{image}}\" alt=\"{{name}}\"><h3>{{name}}</h3><p\
                      \ class=\"price\">{{price}}</p><a href=\"{{url}}\" class=\"\
                      btn\">Buy Now</a></div>{{/products}}</div></body></html>"
                    templateCode: ""
                    editorType: 2
              schema:
                $ref: '#/components/schemas/RestRTemplate'
          description: ✅ Template updated successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update template
      tags:
      - Template
  /customfield:
    get:
      description: |
        Retrieves all custom fields defined for your team.
      operationId: getAllCustomFields
      parameters:
      - description: Number of fields to skip for pagination
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of fields to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: |
          Search custom fields by name (case-insensitive partial matching).

          **Examples:**
          - `points` - Finds "Loyalty points", "Reward points"
        explode: true
        in: query
        name: search
        required: false
        schema:
          maxLength: 100
          minLength: 2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                fields_list:
                  value:
                  - id: custom_field_abc123def456ghi789
                    name: Account Type
                    type: 0
                    description: Customer account classification
                  - id: custom_field_abc123def456ghi783
                    name: Loyalty Points
                    type: 1
                    description: Current loyalty program points
                  - id: custom_field_abc123def456ghi703
                    name: Last Purchase Date
                    type: 2
                    description: Date of most recent purchase
              schema:
                items:
                  $ref: '#/components/schemas/RestRCustomField'
                type: array
          description: ✅ Custom fields retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all custom fields
      tags:
      - Custom Field
    post:
      description: |
        Creates a new custom field for storing contact data.
      operationId: createCustomField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestECustomField'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                text_field:
                  summary: Text custom field
                  value:
                    name: Account Type
                    type: 0
                    description: Customer account classification
                number_field:
                  summary: Number custom field
                  value:
                    name: Loyalty Points
                    type: 1
                    description: Current loyalty program points balance
                date_field:
                  summary: Date custom field
                  value:
                    name: Subscription Expiry
                    type: 2
                    description: Date when subscription expires
              schema:
                $ref: '#/components/schemas/RestRCustomField'
          description: ✅ Custom field created successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create custom field
      tags:
      - Custom Field
  /customfield/{identifier}:
    delete:
      description: |
        Deletes a custom field (data is preserved).

        **🎯 Key Features:**
        - Remove unused fields
        - Data remains on contacts
        - Clean up field list
      operationId: deleteCustomField
      parameters:
      - description: Custom field identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(field_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Custom field deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete custom field
      tags:
      - Custom Field
    get:
      description: |
        Retrieves details about a specific custom field.
      operationId: getCustomField
      parameters:
      - description: Custom field identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(field_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRCustomField'
          description: ✅ Custom field retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get custom field by ID
      tags:
      - Custom Field
    put:
      description: |
        Updates a custom field definition.
      operationId: updateCustomField
      parameters:
      - description: Custom field identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(field_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              update_name:
                summary: Update field name
                value:
                  name: Customer Tier
                  description: Customer segmentation tier (Bronze/Silver/Gold)
            schema:
              $ref: '#/components/schemas/RestECustomField'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRCustomField'
          description: ✅ Custom field updated successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update custom field
      tags:
      - Custom Field
  /webhook:
    get:
      description: |
        Retrieves all configured webhooks.
      operationId: getAllWebhooks
      responses:
        "200":
          content:
            application/json:
              examples:
                webhooks_list:
                  value:
                  - id: webhook_iqj3OR6VbjaO2fohm72MYy
                    enabled: true
                    url: https://api.example.com/webhooks/all
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
                    created: 1705750200
                  - id: webhook_kQJ17si7GhhaKDsPxyXLxY
                    enabled: false
                    url: https://api.example.com/webhooks/engagement
                    unsubscribed: false
                    dropped: false
                    bounced: false
                    markedSpam: false
                    clicked: true
                    opened: true
                    contactCreated: false
                    created: 1705663800
              schema:
                items:
                  $ref: '#/components/schemas/RestRWebhook'
                type: array
          description: ✅ Webhooks retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all webhooks
      tags:
      - Webhook
    post:
      description: |
        Creates a new webhook for event notifications.
      operationId: createWebhook
      requestBody:
        content:
          application/json:
            examples:
              all_events:
                summary: Subscribe to all events
                value:
                  enabled: true
                  url: https://api.example.com/webhooks/sendx
                  unsubscribed: true
                  dropped: true
                  bounced: true
                  markedSpam: true
                  clicked: true
                  opened: true
                  contactCreated: true
              engagement_only:
                summary: Track engagement events only
                value:
                  enabled: true
                  url: https://api.example.com/webhooks/engagement
                  unsubscribed: false
                  dropped: false
                  bounced: false
                  markedSpam: false
                  clicked: true
                  opened: true
                  contactCreated: false
              lifecycle_events:
                summary: Contact lifecycle events
                value:
                  enabled: true
                  url: https://api.example.com/webhooks/lifecycle
                  unsubscribed: true
                  dropped: true
                  bounced: true
                  markedSpam: true
                  clicked: false
                  opened: false
                  contactCreated: true
            schema:
              $ref: '#/components/schemas/RestEWebhook'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                webhook_created:
                  value:
                    id: webhook_9l154iiXlZoPo7vngmamee
                    enabled: true
                    url: https://api.example.com/webhooks/sendx
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
                    created: 1705750200
              schema:
                $ref: '#/components/schemas/RestRWebhook'
          description: ✅ Webhook created successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create webhook
      tags:
      - Webhook
  /webhook/{identifier}:
    delete:
      description: |
        Deletes a webhook configuration.

        **🎯 Key Features:**
        - Remove webhooks
        - Stop event delivery
        - Clean up endpoints
      operationId: deleteWebhook
      parameters:
      - description: Webhook identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(webhook_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: ✅ Webhook deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete webhook
      tags:
      - Webhook
    get:
      description: |
        Retrieves details about a specific webhook.
      operationId: getWebhook
      parameters:
      - description: Webhook identifier to retrieve
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(webhook_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                webhook_details:
                  value:
                    id: webhook_9l154iiXlZoPo7vngmamee
                    enabled: true
                    url: https://api.example.com/webhooks/sendx
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
                    created: 1705750200
              schema:
                $ref: '#/components/schemas/RestRWebhook'
          description: ✅ Webhook retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get webhook by ID
      tags:
      - Webhook
    put:
      description: |
        Updates webhook configuration.
      operationId: updateWebhook
      parameters:
      - description: Webhook identifier to update
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "^(webhook_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestEWebhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                change_url:
                  summary: Update webhook URL
                  value:
                    enabled: true
                    url: https://new-api.example.com/webhooks/sendx
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
                disable_webhook:
                  summary: Temporarily disable webhook
                  value:
                    enabled: false
                    url: https://api.example.com/webhooks/sendx
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
                add_events:
                  summary: Add click tracking
                  value:
                    enabled: true
                    url: https://api.example.com/webhooks/sendx
                    unsubscribed: true
                    dropped: true
                    bounced: true
                    markedSpam: true
                    clicked: true
                    opened: true
                    contactCreated: true
              schema:
                $ref: '#/components/schemas/RestRWebhook'
          description: ✅ Webhook updated successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update webhook
      tags:
      - Webhook
  /events/revenue:
    post:
      description: |
        Records revenue events for analytics and attribution.
      operationId: trackRevenueEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevenueEventRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: ✅ Revenue event tracked successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Track revenue event
      tags:
      - Events
  /events/custom:
    post:
      description: |
        Records custom events for advanced tracking.
      operationId: trackCustomEvent
      requestBody:
        content:
          application/json:
            examples:
              videoWatched:
                summary: Video watched event
                value:
                  identifier: user@example.com
                  name: video_watched
                  data:
                    video_id: "12345"
                    duration: "120"
                    completed: "true"
                  time: 1669990400
              productPurchased:
                summary: Product purchased event
                value:
                  identifier: buyer@example.com
                  name: product_purchased
                  data:
                    product_id: sku_001
                    amount: "49.99"
                    currency: USD
                  time: 1669990400
              signupCompleted:
                summary: Signup completed event
                value:
                  identifier: newuser@example.com
                  name: signup_completed
                  data:
                    referral_code: FRIEND50
                    plan: premium
            schema:
              $ref: '#/components/schemas/CustomEventRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: ✅ Custom event tracked successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Track custom event
      tags:
      - Events
  /events/revenue/postback:
    get:
      description: Trigger a revenue postback for a specific team and event.
      parameters:
      - description: The unique identifier for the team.
        explode: true
        in: query
        name: team_id
        required: true
        schema:
          type: string
        style: form
      - description: The unique sendx identifier for the contact/customer.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: The revenue amount to be posted back.
        explode: true
        in: query
        name: amount
        required: true
        schema:
          format: float
          type: number
        style: form
      - description: The unique identifier for the campaign.
        explode: true
        in: query
        name: campaign_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_events_revenue_postback_get_200_response'
          description: Successful Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_events_revenue_postback_get_400_response'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_events_revenue_postback_get_500_response'
          description: Internal Server Error
      summary: Revenue Event Postback URL
      tags:
      - Event
  /events/custom/postback:
    get:
      description: Register a custom event for a specific team and event.
      parameters:
      - description: The unique identifier for the team.
        explode: true
        in: query
        name: team_id
        required: true
        schema:
          type: string
        style: form
      - description: The unique sendx identifier for the contact/customer.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: The custom event name.
        explode: true
        in: query
        name: event
        required: true
        schema:
          type: string
        style: form
      - description: "Arbitrary custom data as key-value pairs. Add custom parameters\
          \ directly to the query string. \nFor example, `amount=24.43` or `currency=USD`.\n"
        explode: true
        in: query
        name: any-key
        required: true
        schema:
          example: "24.43"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_events_revenue_postback_get_200_response'
          description: Successful Response
      summary: Custom Event Postback URL
      tags:
      - Event
  /report/campaign/{identifier}:
    get:
      description: |
        Retrieves a detailed performance report for a specific campaign.
      operationId: getCampaignReport
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestReportData'
          description: ✅ Report retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get campaign report
      tags:
      - Report
  /post:
    get:
      description: |
        Retrieves all blog posts with pagination.

        **🎯 Key Features:**
        - Filter by status
        - Search functionality
        - Sort options
        - Include metadata
      operationId: getAllPosts
      parameters:
      - description: Number of posts to skip
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Maximum number of posts to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRPost'
                type: array
          description: ✅ Posts retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - TeamApiKey: []
      summary: Get all posts
      tags:
      - Post
    post:
      description: |
        Creates a new blog post.
      operationId: createPost
      requestBody:
        content:
          application/json:
            examples:
              MinimalDraft:
                summary: Minimal Draft Post
                value:
                  name: launch_draft_2025
                  postTitle: Upcoming Product Launch
              FullPublishedPost:
                summary: Fully Published Post
                value:
                  name: summer_collection_2025
                  postTitle: Introducing Our New Summer Collection
                  postDescription: Take a look at our vibrant summer wear designed
                    for comfort and style.
                  postCategory: post_category_YzS1wOU20yw87UUHKxMzwn
                  member: member_JkL012MnO345PqR678
                  postThumbnail: https://cdn.example.com/images/summer-thumb.jpg
                  postHtml: <h1>Welcome to Summer 2025!</h1><p>Explore our latest
                    collection...</p>
                  postTemplate: default-blog
                  isPublished: true
                  includedTags:
                  - tag_XYZ12abc345
                  - tag_123LMN456
                  editorType: 1
                  postSlug: introducing-summer-collection
                  status: 1
                  pageTitle: Introducing Our Summer Collection | Example Blog
                  pageDescription: Explore our fresh 2025 summer styles with vibrant
                    colors and cool fabrics.
                  pageKeywords: "summer, collection, fashion, 2025"
                  socialTitle: Our 2025 Summer Line is Here!
                  socialDescription: Take a sneak peek at our sun-ready styles!
                  socialImageUrl: https://cdn.example.com/images/summer-social.jpg
              MarkdownEditorPost:
                summary: Post by Specific Author Using Markdown
                value:
                  name: technical_article_01
                  postTitle: Understanding REST APIs in 10 Minutes
                  member: member_AaBbCcDdEe123
                  postHtml: <p>This post covers REST fundamentals...</p>
                  editorType: 2
                  isPublished: true
            schema:
              $ref: '#/components/schemas/RestEPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPost'
          description: ✅ Post created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "409":
          $ref: '#/components/responses/Conflict'
      security:
      - TeamApiKey: []
      summary: Create blog post
      tags:
      - Post
  /post/{identifier}:
    delete:
      description: |
        Soft deletes a blog post.

        **🎯 Key Features:**
        - Soft delete
        - Preserve data
        - Remove from listings
      operationId: deletePost
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ✅ Post deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Delete post
      tags:
      - Post
    get:
      description: |
        Retrieves a specific blog post.

        **🎯 Key Features:**
        - Full post content
        - SEO metadata
        - Related posts
        - Engagement metrics
      operationId: getPost
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPost'
          description: ✅ Post retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get post by ID
      tags:
      - Post
    put:
      description: |
        Updates an existing blog post.

        **🎯 Key Features:**
        - Edit content
        - Update metadata
        - Change status
        - Modify tags/categories
      operationId: updatePost
      parameters:
      - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestEPost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPost'
          description: ✅ Post updated successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Update post
      tags:
      - Post
  /post/category:
    get:
      description: |
        Retrieves all blog post categories.
      operationId: getAllPostCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRPostCategory'
                type: array
          description: ✅ Categories retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - TeamApiKey: []
      summary: Get all post categories
      tags:
      - Post Category
    post:
      description: |
        Creates a new category for organizing blog posts.
      operationId: createPostCategory
      requestBody:
        content:
          application/json:
            examples:
              product_updates:
                value:
                  name: Product Updates
              feature_requests:
                value:
                  name: Feature Requests
            schema:
              $ref: '#/components/schemas/RestEPostCategory'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                product_updates:
                  value:
                    id: post_category_YzS1wOU20yw87UUHKxMzwn
                    name: Product Updates
                    created: 2022-05-23T11:00:00.000Z
                    updated: 2022-05-23T11:00:00.000Z
              schema:
                $ref: '#/components/schemas/RestRPostCategory'
          description: ✅ Category created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "409":
          $ref: '#/components/responses/Conflict'
      security:
      - TeamApiKey: []
      summary: Create post category
      tags:
      - Post Category
  /post/category/{identifier}:
    delete:
      description: |
        Soft deletes a post category.
      operationId: deletePostCategory
      parameters:
      - description: |
          The unique post category identifier to retrieve.
          - `post_category_YzS1wOU20yw87UUHKxMzwn`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          pattern: "^(post_category_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ✅ Category deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Delete post category
      tags:
      - Post Category
    get:
      description: |
        Retrieves a specific post category.
      operationId: getPostCategory
      parameters:
      - description: |
          The unique post category identifier to retrieve.
          - `post_category_YzS1wOU20yw87UUHKxMzwn`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          pattern: "^(post_category_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPostCategory'
          description: ✅ Category retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Get post category by ID
      tags:
      - Post Category
    put:
      description: |
        Updates a post category.
      operationId: updatePostCategory
      parameters:
      - description: |
          The unique post category identifier to retrieve.
          - `post_category_YzS1wOU20yw87UUHKxMzwn`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          pattern: "^(post_category_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestEPostCategory'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPostCategory'
          description: ✅ Category updated successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Update post category
      tags:
      - Post Category
  /post/tag:
    get:
      description: |
        Retrieves all blog post tags.
      operationId: getAllPostTags
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRPostTag'
                type: array
          description: ✅ Tags retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get all post tags
      tags:
      - Post Tag
    post:
      description: |
        Creates a new tag for blog posts.
      operationId: createPostTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestEPostTag'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPostTag'
          description: ✅ Tag created successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Create post tag
      tags:
      - Post Tag
  /post/tag/{identifier}:
    delete:
      description: |
        Soft deletes a post tag.
      operationId: deletePostTag
      parameters:
      - description: |
          The unique post tag identifier to retrieve.
          - `post_tag_leBDiFdrUnRmRz4nfopSrv`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_tag_leBDiFdrUnRmRz4nfopSrv
          pattern: "^(post_tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ✅ Tag deleted successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Delete post tag
      tags:
      - Post Tag
    get:
      description: |
        Retrieves a specific post tag.
      operationId: getPostTag
      parameters:
      - description: |
          The unique post tag identifier to retrieve.
          - `post_tag_leBDiFdrUnRmRz4nfopSrv`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_tag_leBDiFdrUnRmRz4nfopSrv
          pattern: "^(post_tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPostTag'
          description: ✅ Tag retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security:
      - TeamApiKey: []
      summary: Get post tag by ID
      tags:
      - Post Tag
    put:
      description: |
        Updates a post tag.
      operationId: updatePostTag
      parameters:
      - description: |
          The unique post tag identifier to retrieve.
          - `post_tag_leBDiFdrUnRmRz4nfopSrv`
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          example: post_tag_leBDiFdrUnRmRz4nfopSrv
          pattern: "^(post_tag_)?[a-zA-Z0-9]{22}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestEPostTag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRPostTag'
          description: ✅ Tag updated successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
      security:
      - TeamApiKey: []
      summary: Update post tag
      tags:
      - Post Tag
  /team/member:
    get:
      description: Retrieves all team members.
      operationId: getAllTeamMembers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestRMember'
                type: array
          description: ✅ Tags retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Get all team members
      tags:
      - Team Member
  /team/member/{identifier}:
    get:
      description: Retrieves a single team member by their unique identifier.
      operationId: getTeamMember
      parameters:
      - $ref: '#/components/parameters/identifier'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestRMember'
          description: ✅ Team member retrieved successfully
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - TeamApiKey: []
      summary: Get a team member by ID
      tags:
      - Team Member
components:
  parameters:
    identifier:
      description: |
        Resource identifier with prefix (e.g., `contact_BnKjkbBBS500CoBCP0oChQ`)

        **Format:** `<prefix>_<22-character-id>`
      explode: false
      in: path
      name: identifier
      required: true
      schema:
        example: contact_BnKjkbBBS500CoBCP0oChQ
        pattern: "^[a-z_]+_[a-zA-Z0-9]{22}$"
        type: string
      style: simple
  responses:
    BadRequest:
      content:
        application/json:
          examples:
            invalid_id:
              summary: Invalid ID format
              value:
                status: error
                message: Invalid identifier format
            missing_field:
              summary: Missing required field
              value:
                status: error
                message: Email is required
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Bad Request - Invalid input data
    Unauthorized:
      content:
        application/json:
          example:
            status: 401
            message: The Team ID or API Key specified is not valid
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Unauthorized - Invalid or missing API key
    Forbidden:
      content:
        application/json:
          example:
            status: error
            message: Resource with this name already exists
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Forbidden - Resource name already exists
    NotFound:
      content:
        application/json:
          example:
            status: error
            message: Resource not found
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Not Found - Resource does not exist
    Conflict:
      content:
        application/json:
          example:
            status: error
            message: Email already exists
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Conflict - Resource already exists
    UnprocessableEntity:
      content:
        application/json:
          example:
            status: error
            message: Request body is not in proper format
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Unprocessable Entity - Invalid request format
    TooManyRequests:
      content:
        application/json:
          example:
            status: error
            message: Email sending limit exceeded. Please upgrade your plan.
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Too Many Requests - Rate limit exceeded
    InternalServerError:
      content:
        application/json:
          example:
            status: error
            message: Internal server error occurred
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: ❌ Internal Server Error - System error occurred
  schemas:
    ErrorResponse:
      example:
        message: Invalid request format
        status: error
      properties:
        status:
          enum:
          - error
          example: error
          type: string
        message:
          description: Human-readable error message
          example: Invalid request format
          type: string
      required:
      - message
      - status
    MessageResponse:
      example:
        message: Operation completed successfully
        status: success
      properties:
        status:
          example: success
          type: string
        message:
          example: Operation completed successfully
          type: string
    DeleteResponse:
      example:
        message: Resource deleted successfully
        status: success
      properties:
        status:
          enum:
          - success
          example: success
          type: string
        message:
          example: Resource deleted successfully
          type: string
      required:
      - message
      - status
    XEmailMessage:
      example:
        template: template_f3lJvTEhSjKGVb5Lwc5SWS
        headers:
          X-Custom-Header: Value
        htmlBody: <h1>Your HTML Content</h1>
        subject: Your Subject Here
        replyTo:
          name: Reply Name
          email: reply@example.com
        from:
          name: From Name
          email: from@example.com
        textBody: Your Text Content
        to:
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          customFields:
            key: customFields
          name: To Name
          email: to@example.com
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          customFields:
            key: customFields
          name: To Name
          email: to@example.com
      properties:
        from:
          $ref: '#/components/schemas/XFrom'
        to:
          items:
            $ref: '#/components/schemas/XTo'
          type: array
        replyTo:
          $ref: '#/components/schemas/XReplyTo'
        subject:
          example: Your Subject Here
          type: string
        htmlBody:
          example: <h1>Your HTML Content</h1>
          type: string
        textBody:
          example: Your Text Content
          type: string
        headers:
          additionalProperties:
            type: string
          example:
            X-Custom-Header: Value
        template:
          description: Template identifier
          example: template_f3lJvTEhSjKGVb5Lwc5SWS
          type: string
      required:
      - from
      - htmlBody
      - subject
      - to
    TemplateEmailMessage:
      example:
        template: template_f3lJvTEhSjKGVb5Lwc5SWS
        subject: Your Subject Here
        replyTo:
          name: Reply Name
          email: reply@example.com
        from:
          name: From Name
          email: from@example.com
        to:
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          customFields:
            key: customFields
          name: To Name
          email: to@example.com
        - cc:
          - cc
          - cc
          bcc:
          - bcc
          - bcc
          customFields:
            key: customFields
          name: To Name
          email: to@example.com
      properties:
        from:
          $ref: '#/components/schemas/XFrom'
        to:
          items:
            $ref: '#/components/schemas/XTo'
          minItems: 1
          type: array
        replyTo:
          $ref: '#/components/schemas/XReplyTo'
        subject:
          description: Override template subject
          example: Your Subject Here
          type: string
        template:
          description: Template identifier
          example: template_f3lJvTEhSjKGVb5Lwc5SWS
          type: string
      required:
      - from
      - subject
      - template
      - to
    XFrom:
      example:
        name: From Name
        email: from@example.com
      properties:
        email:
          example: from@example.com
          format: email
          type: string
        name:
          example: From Name
          type: string
      required:
      - email
    XTo:
      example:
        cc:
        - cc
        - cc
        bcc:
        - bcc
        - bcc
        customFields:
          key: customFields
        name: To Name
        email: to@example.com
      properties:
        email:
          example: to@example.com
          format: email
          type: string
        name:
          example: To Name
          type: string
        cc:
          items:
            format: email
            type: string
          type: array
        bcc:
          items:
            format: email
            type: string
          type: array
        customFields:
          additionalProperties:
            type: string
      required:
      - email
    XReplyTo:
      example:
        name: Reply Name
        email: reply@example.com
      properties:
        email:
          example: reply@example.com
          format: email
          type: string
        name:
          example: Reply Name
          type: string
      required:
      - email
    XEmailResponse:
      example:
        messageId: messageId
        errorCode: 6
        to: to
        submittedAt: 0
        message: message
      properties:
        to:
          description: Recipient email address
          format: email
          type: string
        submittedAt:
          description: Unix timestamp of submission
          format: int64
          type: integer
        messageId:
          description: Unique message identifier
          type: string
        errorCode:
          description: Error code (0 = success)
          type: integer
        message:
          description: Status message
          type: string
    RestEContact:
      example:
        firstName: John
        lastName: Doe
        customFields:
          field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
          field_QqfhckbdcvQinLPlduIbHq: Senior
        lists:
        - list_OcuxJHdiAvujmwQVJfd3ss
        lastTrackedIp: 192.168.1.100
        company: Example Corp
        email: john.doe@example.com
        tags:
        - tag_UhsDkjL772Qbj5lWtT62VK
      properties:
        firstName:
          description: First name of the contact
          example: John
          maxLength: 255
          type: string
        lastName:
          description: Last name of the contact
          example: Doe
          maxLength: 255
          type: string
        email:
          description: |
            Email address of the contact (required and must be unique within team).

            **Validation:**
            - Must be a valid email format
            - Must be unique within the team
            - Cannot be empty or null
          example: john.doe@example.com
          format: email
          maxLength: 255
          type: string
        company:
          description: Company name of the contact
          example: Example Corp
          maxLength: 255
          type: string
        customFields:
          additionalProperties:
            type: string
          description: |
            Custom fields as key-value pairs. Keys should use `field_` prefix.

            **Processing:**
            - Keys are case-sensitive
            - Values are stored as strings

            **Examples:**
            - `"field_MnuqBAG2NPLm7PZMWbjQxt": "Engineering"` → stored as `department: Engineering`
          example:
            field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
            field_QqfhckbdcvQinLPlduIbHq: Senior
        lists:
          description: "Array of list identifiers to associate with the contact. \n\
            Identifiers should use `list_` prefix.\n\n**Processing:**\n- Invalid list\
            \ IDs will send our 400 error\n- Duplicates will be removed\n\n**Examples:**\n\
            - `\"list_OcuxJHdiAvujmwQVJfd3ss\"` → valid prefixed format\n"
          example:
          - list_OcuxJHdiAvujmwQVJfd3ss
          items:
            pattern: "^(list_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
        tags:
          description: |
            Array of tag identifiers to associate with the contact.
            Identifiers should use `tag_` prefix.

            **Processing:**
            - Invalid tag IDs will be ignored
            - Duplicates will be removed

            **Examples:**
            - `"tag_UhsDkjL772Qbj5lWtT62VK"` → valid prefixed format
          example:
          - tag_UhsDkjL772Qbj5lWtT62VK
          items:
            pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
        lastTrackedIp:
          description: |
            Last tracked IP address of the contact for analytics purposes.

            **Usage:**
            - Used for geographic analytics
            - Helps with spam detection
            - Optional field
          example: 192.168.1.100
          format: ipv4
          type: string
      required:
      - email
    RestRContact:
      example:
        lastName: Doe
        customFields:
          field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
          field_QqfhckbdcvQinLPlduIbHq: Senior
        created: 2024-01-10T14:20:00Z
        dropped: false
        lastTrackedIp: 203.0.113.42
        bounced: false
        trackData: utm_source=website&utm_campaign=signup&utm_medium=banner
        tags:
        - tag_UhsDkjL772Qbj5lWtT62VK
        - tag_UhsDkjL772Qbj5lWtT62VK
        LTV: 7500
        firstName: John
        unsubscribed: false
        contactSource: 1
        blocked: false
        lists:
        - list_OcuxJHdiAvujmwQVJfd3ss
        - list_xyz789ghi012
        pageSource: https://example.com/signup?ref=google-ads
        company: Example Corp
        id: contact_BnKjkbBBS500CoBCP0oChQ
        spam: false
        updated: 2024-01-15T09:15:00Z
        email: john.doe@example.com
      properties:
        id:
          description: |
            Unique contact identifier with contact_ prefix.

            **Format:** `contact_` + 22 alphanumeric characters

            **Usage:**
            - Use this ID for all subsequent API calls
            - Unique across the entire SendX platform
            - Never changes once created
          example: contact_BnKjkbBBS500CoBCP0oChQ
          pattern: "^contact_[a-zA-Z0-9]{22}$"
          type: string
        firstName:
          description: First name of the contact
          example: John
          type: string
          nullable: true
        lastName:
          description: Last name of the contact
          example: Doe
          type: string
          nullable: true
        email:
          description: Email address of the contact (unique within team)
          example: john.doe@example.com
          format: email
          type: string
        company:
          description: Company name of the contact
          example: Example Corp
          type: string
          nullable: true
        customFields:
          additionalProperties:
            type: string
          description: |
            Custom fields with field_ prefixed keys.

            **Format:** All keys have `field_` prefix in responses

            **Example Structure:**
            ```json
            {
              "field_MnuqBAG2NPLm7PZMWbjQxt": "Engineering",
              "field_QqfhckbdcvQinLPlduIbHq": "Senior",
              "field_MnuqBAG2NPLm7PZMWbjQxt": "$75000"
            }
            ```
          example:
            field_MnuqBAG2NPLm7PZMWbjQxt: Engineering
            field_QqfhckbdcvQinLPlduIbHq: Senior
        lists:
          description: |
            Associated lists with list_ prefixed identifiers.

            **Format:** All IDs have `list_` prefix in responses
          example:
          - list_OcuxJHdiAvujmwQVJfd3ss
          - list_xyz789ghi012
          items:
            pattern: "^list_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        tags:
          description: |
            Associated tags with tag_ prefixed identifiers.

            **Format:** All IDs have `tag_` prefix in responses
          example:
          - tag_UhsDkjL772Qbj5lWtT62VK
          - tag_UhsDkjL772Qbj5lWtT62VK
          items:
            pattern: "^tag_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        unsubscribed:
          description: Whether the contact has unsubscribed from emails
          example: false
          type: boolean
        bounced:
          description: Whether emails to this contact have bounced
          example: false
          type: boolean
        spam:
          description: Whether the contact has marked emails as spam
          example: false
          type: boolean
        blocked:
          description: Whether the contact is blocked from receiving emails
          example: false
          type: boolean
        dropped:
          description: Whether emails to this contact have been dropped
          example: false
          type: boolean
        created:
          description: Contact creation timestamp (ISO 8601 format)
          example: 2024-01-10T14:20:00Z
          format: date-time
          type: string
        updated:
          description: Contact last update timestamp (ISO 8601 format)
          example: 2024-01-15T09:15:00Z
          format: date-time
          type: string
        trackData:
          description: |
            Email tracking data and UTM parameters.

            **Contains:**
            - UTM parameters from campaigns
            - Attribution data
            - Custom tracking parameters
          example: utm_source=website&utm_campaign=signup&utm_medium=banner
          type: string
        contactSource:
          description: |
            Source type of the contact creation.

            **Values:**
            - `1` - API/Manual
            - `2` - Import
            - `3` - Form
            - `4` - Integration
          example: 1
          type: integer
        pageSource:
          description: URL of the page where contact was created
          example: https://example.com/signup?ref=google-ads
          type: string
          nullable: true
        lastTrackedIp:
          description: Last tracked IP address of the contact
          example: 203.0.113.42
          format: ipv4
          type: string
          nullable: true
        LTV:
          description: |
            Lifetime Value of the contact in cents.

            **Example:** 7500 = $75.00
          example: 7500
          type: integer
    RestECampaign:
      example:
        subject: "🌸 Spring Sale - {{contact.firstName}}, Save 30%!"
        timezone: America/New_York
        htmlCode: <html><body><h1>Spring Sale!</h1><p>Save 30% on all items</p></body></html>
        excludedTags:
        - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
        preferredTimeCondition: 10:00 AM
        scheduleCondition: 2024-03-20
        sendInContactsTimezone: true
        includedLists:
        - list_vUCjsUmrVXtSppS8rD0Ssq
        includedSegments:
        - segment_v3nooFn4M423mFomfml4P
        excludedLists:
        - list_0tOFLp5RgV7s3LNiHrjGYs
        preferredTimezone: America/Los_Angeles
        scheduleType: 0
        sender: sender_4vK3WFhMgvOwUNyaL4QxCD
        includedTags:
        - tag_6GN4DNyrHNt4KktCNG8PDO
        name: Spring Sale Campaign
        plainText: |-
          Spring Sale!

          Save 30% on all items...
        previewText: Limited time offer - 30% off everything!
        smartSend: true
        excludedSegments:
        - segment_v3nooFn4M423mFomfml4P
        timeCondition: 9:00 AM
      properties:
        name:
          description: Campaign name for internal organization
          example: Spring Sale Campaign
          maxLength: 255
          type: string
        subject:
          description: |
            Email subject line with personalization support.

            **Features:**
            - Supports template variables ({{contact.firstName}})
            - Emoji support for better engagement
            - A/B testing variations supported
          example: "🌸 Spring Sale - {{contact.firstName}}, Save 30%!"
          maxLength: 255
          type: string
        sender:
          description: |
            Sender identifier.

            **Note:** Sender must be verified before use
          example: sender_4vK3WFhMgvOwUNyaL4QxCD
          pattern: "^(sender_)?[a-zA-Z0-9]{22}$"
          type: string
        htmlCode:
          description: HTML content of the email campaign
          example: <html><body><h1>Spring Sale!</h1><p>Save 30% on all items</p></body></html>
          type: string
        previewText:
          description: Preview text shown in email clients
          example: Limited time offer - 30% off everything!
          maxLength: 255
          type: string
        plainText:
          description: Plain text version for better deliverability
          example: |-
            Spring Sale!

            Save 30% on all items...
          type: string
        scheduleType:
          description: |
            Campaign scheduling type.

            **Values:**
            - `0` - Schedule for specific date/time
            - `1` - Send immediately
          example: 0
          type: integer
        scheduleCondition:
          description: datetime for scheduled campaigns (required if scheduleType=0)
          example: 2024-03-20
          type: string
        timeCondition:
          description: Time condition for scheduled campaigns in HH:MM PM/AM format
          example: 9:00 AM
          type: string
        timezone:
          description: Timezone for scheduled campaigns (IANA format)
          example: America/New_York
          type: string
        preferredTimezone:
          description: Preferred timezone for smart send optimization (required for
            smartSend and sendInContactsTimezone)
          example: America/Los_Angeles
          type: string
        preferredTimeCondition:
          description: Preferred time optimization setting (required for smartSend
            and sendInContactsTimezone)
          example: 10:00 AM
          type: string
        sendInContactsTimezone:
          description: Send at specified time in each contact's timezone
          example: true
          type: boolean
        smartSend:
          description: Enable AI-powered send time optimization
          example: true
          type: boolean
        includedSegments:
          description: Segment IDs to include
          example:
          - segment_v3nooFn4M423mFomfml4P
          items:
            pattern: "^segment_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        includedLists:
          description: List IDs to include
          example:
          - list_vUCjsUmrVXtSppS8rD0Ssq
          items:
            pattern: "^(list_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
        includedTags:
          description: Tag IDs to include
          example:
          - tag_6GN4DNyrHNt4KktCNG8PDO
          items:
            pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedSegments:
          description: Segment IDs to exclude
          example:
          - segment_v3nooFn4M423mFomfml4P
          items:
            pattern: "^segment_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedLists:
          description: List IDs to exclude
          example:
          - list_0tOFLp5RgV7s3LNiHrjGYs
          items:
            pattern: "^(list_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedTags:
          description: Tag IDs to exclude (prefix automatically stripped)
          example:
          - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
          items:
            pattern: "^(tag_)?[a-zA-Z0-9]{22}$"
            type: string
          type: array
      required:
      - htmlCode
      - name
      - sender
      - subject
    RestRCampaign:
      example:
        subject: 🌞 Summer Sale - 50% Off Everything!
        timezone: America/New_York
        isArchived: false
        preferredTimeCondition: 10:00 AM
        scheduleCondition: 2024-12-30
        htmlContent: htmlContent
        includedSegments:
        - segment_engaged_30_days
        excludedLists:
        - list_Mn7Op8Qr9St0Uv1Wx2Yz3A
        id: campaign_6h8DnYrHt4KktCnG8PDO5Z
        smartSend: America/New_York
        created: 2000-01-23T04:56:07.000+00:00
        excludedTags:
        - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
        textContent: textContent
        campaignScreenshotUrl: https://cdn.sendx.io/campaigns/screenshot_abc123.png
        sendInContactsTimezone: true
        includedLists:
        - list_vUCjsUmrVXtSppS8rD0Ssq
        - list_0tOFLp5RgV7s3LNiHrjGYs
        preheader: Limited time offer - Shop now!
        preferredTimezone: America/Los_Angeles
        scheduleType: 0
        sender: sender_4vK3WFhMgvOwUNyaL4QxCD
        includedTags:
        - tag_6GN4DNyrHNt4KktCNG8PDO
        - tag_UhsDkjL772Qbj5lWtT62VK
        name: Summer Sale 2024
        strategy: Batch Sending
        excludedSegments: []
        updated: 2000-01-23T04:56:07.000+00:00
        status: 6
        timeCondition: 9:00 AM
      properties:
        id:
          description: Encrypted ID of the campaign
          example: campaign_6h8DnYrHt4KktCnG8PDO5Z
          type: string
        name:
          description: Internal campaign name
          example: Summer Sale 2024
          type: string
        subject:
          description: Email subject line
          example: 🌞 Summer Sale - 50% Off Everything!
          type: string
        preheader:
          description: Email preview text
          example: Limited time offer - Shop now!
          type: string
        sender:
          description: Sender id
          example: sender_4vK3WFhMgvOwUNyaL4QxCD
          type: string
        htmlContent:
          description: HTML email content
          type: string
        textContent:
          description: Plain text email content
          type: string
        scheduleType:
          default: 0
          description: |
            Campaign scheduling type.

            **Values:**
            - `0` - Schedule later
            - `1` - Send Now
          type: integer
        scheduleCondition:
          description: datetime for scheduled campaigns (required if scheduleType=1)
          example: 2024-12-30
          type: string
        status:
          description: |
            Campaign status.

            **Values:**
            - `0` - Draft
            - `1` - Scheduled
            - `2` - Sending
            - `3` - Sent
            - `4` - Quarantined
            - `5` - Evaluating
            - `6` - Evaluation Failed
            - `7` - Warming Up
          type: integer
        timeCondition:
          description: Time-related condition for the campaign
          example: 9:00 AM
          type: string
        timezone:
          description: Campaign timezone
          example: America/New_York
          type: string
        smartSend:
          description: Timezone for the scheduled send
          example: America/New_York
          type: boolean
        sendInContactsTimezone:
          description: Send at specified time in each contact's timezone
          example: true
          type: boolean
        preferredTimeCondition:
          description: "Preferred time condition, in case of smartSend and sendInContactTimeZone"
          example: 10:00 AM
          type: string
        preferredTimezone:
          description: Preferred timezone for smart send optimization
          example: America/Los_Angeles
          type: string
        strategy:
          description: Campaign delivery strategy
          example: Batch Sending
          type: string
        includedSegments:
          description: Included segment IDs
          example:
          - segment_engaged_30_days
          items:
            pattern: "^segment_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        includedLists:
          description: Included list IDs with prefix
          example:
          - list_vUCjsUmrVXtSppS8rD0Ssq
          - list_0tOFLp5RgV7s3LNiHrjGYs
          items:
            pattern: "^list_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        includedTags:
          description: Included tag IDs with prefix
          example:
          - tag_6GN4DNyrHNt4KktCNG8PDO
          - tag_UhsDkjL772Qbj5lWtT62VK
          items:
            pattern: "^tag_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedSegments:
          description: Excluded segment IDs
          example: []
          items:
            pattern: "^segment_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedLists:
          description: Excluded list IDs with prefix
          example:
          - list_Mn7Op8Qr9St0Uv1Wx2Yz3A
          items:
            pattern: "^list_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        excludedTags:
          description: Excluded tag IDs with prefix
          example:
          - tag_Bv4Wq9Xp6Zn5Ly0Kt8JhQe
          items:
            pattern: "^tag_[a-zA-Z0-9]{22}$"
            type: string
          type: array
        isArchived:
          description: Whether the campaign is archived
          example: false
          type: boolean
        campaignScreenshotUrl:
          description: URL to the campaign screenshot
          example: https://cdn.sendx.io/campaigns/screenshot_abc123.png
          type: string
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      required:
      - excludedLists
      - includedLists
      - name
      - scheduleCondition
      - scheduleType
      - sender
      - subject
    RestEList:
      example:
        name: Newsletter Subscribers
      properties:
        name:
          description: List name
          example: Newsletter Subscribers
          type: string
      required:
      - name
    RestRList:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: Newsletter Subscribers
        id: list_OcuxJHdiAvujmwQVJfd3ss
        type: 0
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: list_OcuxJHdiAvujmwQVJfd3ss
          type: string
        name:
          example: Newsletter Subscribers
          type: string
        type:
          description: |
            List type.

            **Values:**
            - `0` - Regular list (single opt-in)
            - `1` - Double opt-in list (requires email confirmation)
          enum:
          - 0
          - 1
          type: integer
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
    RestETag:
      example:
        name: VIP Customer
      properties:
        name:
          description: Tag name (must be unique within team)
          example: VIP Customer
          type: string
      required:
      - name
    RestRTag:
      example:
        created: 2024-01-20T10:30:00Z
        name: VIP Customer
        id: tag_abc123def456ghi789
        updated: 2024-01-20T10:30:00Z
      properties:
        id:
          description: Unique tag identifier with tag_ prefix
          example: tag_abc123def456ghi789
          pattern: "^tag_[a-zA-Z0-9]{22}$"
          type: string
        name:
          description: Tag name
          example: VIP Customer
          type: string
        created:
          description: Tag creation timestamp
          example: 2024-01-20T10:30:00Z
          format: date-time
          type: string
        updated:
          description: Tag last update timestamp
          example: 2024-01-20T10:30:00Z
          format: date-time
          type: string
    RestESender:
      example:
        name: John Smith
        email: john@example.com
      properties:
        name:
          description: Sender display name
          example: John Smith
          type: string
        email:
          description: Sender email address (must be verified)
          example: john@example.com
          format: email
          type: string
      required:
      - email
      - name
    RestRSender:
      example:
        name: John Smith
        id: sender_4vK3WFhMgvOwUNyaL4QxCD
        isWhitelisted: true
        email: john@example.com
      properties:
        id:
          description: Unique sender identifier with sender_ prefix
          example: sender_4vK3WFhMgvOwUNyaL4QxCD
          pattern: "^sender_[a-zA-Z0-9]{22}$"
          type: string
        name:
          description: Sender display name
          example: John Smith
          type: string
        email:
          description: Sender email address
          example: john@example.com
          format: email
          type: string
        isWhitelisted:
          description: Sender whitelist status
          example: true
          type: boolean
    RestETemplate:
      example:
        preheader: preheader
        subject: "Welcome to {{company_name}}!"
        name: Welcome Email Template
        textContent: textContent
        htmlContent: htmlContent
        tags:
        - tags
        - tags
      properties:
        name:
          description: Template name
          example: Welcome Email Template
          type: string
        subject:
          description: Email subject line
          example: "Welcome to {{company_name}}!"
          type: string
        htmlContent:
          description: HTML email content
          type: string
        textContent:
          description: Plain text content
          type: string
        preheader:
          description: Preview text
          type: string
        tags:
          description: Template tags for organization
          items:
            type: string
          type: array
      required:
      - name
      - subject
    RestRTemplate:
      example:
        thumbnail: https://cdn.sendx.io/templates/thumb_abc123.png
        subject: Welcome to our platform!
        created: 2024-01-10T14:20:00Z
        htmlCode: <html><body><h1>Welcome!</h1></body></html>
        name: Welcome Email Template
        id: template_abc123def456ghi789
        templateCode: "{\"blocks\":[{\"type\":\"text\",\"content\":\"Welcome!\"}]}"
        type: 0
        editorType: 1
        updated: 2024-01-15T09:15:00Z
      properties:
        id:
          description: Unique template identifier with template_ prefix
          example: template_abc123def456ghi789
          pattern: "^template_[a-zA-Z0-9]{22}$"
          type: string
        name:
          description: Name of the template
          example: Welcome Email Template
          type: string
        subject:
          description: Email subject line (if applicable)
          example: Welcome to our platform!
          type: string
          nullable: true
        htmlCode:
          description: HTML content of the template
          example: <html><body><h1>Welcome!</h1></body></html>
          type: string
        templateCode:
          description: Template code for visual editors (JSON structure)
          example: "{\"blocks\":[{\"type\":\"text\",\"content\":\"Welcome!\"}]}"
          type: string
          nullable: true
        type:
          description: |
            Template type.

            **Values:**
            - `0` - Email template
            - `1` - Other types
          example: 0
          type: integer
        thumbnail:
          description: URL to template thumbnail image
          example: https://cdn.sendx.io/templates/thumb_abc123.png
          type: string
          nullable: true
        editorType:
          description: |
            Editor type used to create the template.

            **Values:**
            - `0` - PlainText
            - `1` - DragDrop
            - `2` - SendxEditor
          enum:
          - 0
          - 1
          - 2
          example: 1
          type: integer
        created:
          description: Template creation timestamp
          example: 2024-01-10T14:20:00Z
          format: date-time
          type: string
        updated:
          description: Template last update timestamp
          example: 2024-01-15T09:15:00Z
          format: date-time
          type: string
    RestECustomField:
      example:
        name: Account Type
        description: Customer account classification
        type: 0
      properties:
        name:
          description: Custom field name (must be unique within team)
          example: Account Type
          type: string
        type:
          description: |
            Field data type.

            **Values:**
            - `0` - Text (max 255 characters)
            - `1` - Number (integer or decimal)
            - `2` - Date (YYYY-MM-DD format)
            - `3` - Boolean (true/false)
            - `4` - Phone number (international format)
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        description:
          description: Field description for documentation
          example: Customer account classification
          type: string
      required:
      - name
      - type
    RestRCustomField:
      example:
        name: Account Type
        description: Customer account classification
        id: custom_field_abc123def456ghi789
        type: 0
      properties:
        id:
          description: Unique field identifier with field_ prefix
          example: custom_field_abc123def456ghi789
          pattern: "^custom_field_[a-zA-Z0-9]{22}$"
          type: string
        name:
          description: Custom field name
          example: Account Type
          type: string
        type:
          description: |
            Field data type.

            **Values:**
            - `0` - Text (max 255 characters)
            - `1` - Number (integer or decimal)
            - `2` - Date (YYYY-MM-DD format)
            - `3` - Boolean (true/false)
            - `4` - Phone number (international format)
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        description:
          description: Field description for documentation
          example: Customer account classification
          type: string
    RestEWebhook:
      example:
        unsubscribed: false
        markedSpam: false
        dropped: false
        opened: false
        bounced: false
        clicked: false
        contactCreated: false
        url: https://api.example.com/webhooks/sendx
        enabled: true
      properties:
        url:
          description: Webhook endpoint URL
          example: https://api.example.com/webhooks/sendx
          format: uri
          type: string
        enabled:
          default: true
          description: Whether webhook is enabled
          type: boolean
        unsubscribed:
          default: false
          description: Trigger webhook when a contact unsubscribes
          type: boolean
        dropped:
          default: false
          description: Trigger webhook when an email is dropped
          type: boolean
        bounced:
          default: false
          description: Trigger webhook when an email bounces
          type: boolean
        markedSpam:
          default: false
          description: Trigger webhook when an email is marked as spam
          type: boolean
        clicked:
          default: false
          description: Trigger webhook when a link in the email is clicked
          type: boolean
        opened:
          default: false
          description: Trigger webhook when an email is opened
          type: boolean
        contactCreated:
          default: false
          description: Trigger webhook when a new contact is created
          type: boolean
      required:
      - enabled
      - url
    RestRWebhook:
      example:
        unsubscribed: false
        markedSpam: false
        dropped: false
        opened: false
        id: webhook_9l154iiXlZoPo7vngmamee
        bounced: false
        clicked: false
        contactCreated: false
        url: https://api.example.com/webhooks/sendx
        enabled: true
      properties:
        id:
          example: webhook_9l154iiXlZoPo7vngmamee
          type: string
        url:
          description: Webhook endpoint URL
          example: https://api.example.com/webhooks/sendx
          format: uri
          type: string
        enabled:
          default: true
          description: Whether webhook is enabled
          type: boolean
        unsubscribed:
          default: false
          description: Trigger webhook when a contact unsubscribes
          type: boolean
        dropped:
          default: false
          description: Trigger webhook when an email is dropped
          type: boolean
        bounced:
          default: false
          description: Trigger webhook when an email bounces
          type: boolean
        markedSpam:
          default: false
          description: Trigger webhook when an email is marked as spam
          type: boolean
        clicked:
          default: false
          description: Trigger webhook when a link in the email is clicked
          type: boolean
        opened:
          default: false
          description: Trigger webhook when an email is opened
          type: boolean
        contactCreated:
          default: false
          description: Trigger webhook when a new contact is created
          type: boolean
    RevenueEventRequest:
      example:
        identifier: customer@example.com
        amount: 99.99
        source: website
        time: 1669990400
      properties:
        identifier:
          description: Contact email address
          example: customer@example.com
          format: email
          type: string
        amount:
          description: Revenue amount
          example: 99.99
          format: float
          type: number
        source:
          description: Source of the revenue event
          example: website
          type: string
        time:
          description: "Unix timestamp (in seconds since January 1, 1970) representing\
            \ when the event occurred."
          example: 1669990400
          format: int64
          type: integer
      required:
      - amount
      - identifier
    CustomEventRequest:
      example:
        identifier: user@example.com
        data:
          video_id: "12345"
          duration: "120"
          completed: "true"
        name: video_watched
        time: 1669990400
      properties:
        identifier:
          description: |
            This is the contact identifier. Contact id and email can be used interchangeably.
          example: user@example.com
          type: string
        name:
          description: Event name
          example: video_watched
          type: string
        data:
          additionalProperties: true
          description: Event data
          example:
            video_id: "12345"
            duration: "120"
            completed: "true"
          type: object
        time:
          description: "Unix timestamp (in seconds since January 1, 1970) representing\
            \ when the event occurred."
          example: 1669990400
          format: int64
          type: integer
      required:
      - email
      - name
    EventResponse:
      example:
        message: Event tracked successfully
        status: success
      properties:
        status:
          example: success
          type: string
        message:
          example: Event tracked successfully
          type: string
    PostbackResponse:
      properties:
        success:
          example: true
          type: boolean
        message:
          example: Event tracked via postback
          type: string
    RestReportData:
      example:
        openedUniqueContactCount: 14
        linkStats:
        - url: https://sendx.io
          count: 10
        - url: https://sendx.io
          count: 10
        clickedContactCount: 10
        bounceContactCount: 3
        campaignId: campaign_6h8DnYrHt4KktCnG8PDO5Z
        unsubscribeContactCount: 5
        openedContactCount: 14
        clickedUniqueContactCount: 10
        sentContactCount: 20
        spamContactCount: 2
      properties:
        campaignId:
          description: Unique identifier of the campaign
          example: campaign_6h8DnYrHt4KktCnG8PDO5Z
          type: string
        linkStats:
          items:
            $ref: '#/components/schemas/LinkStat'
          type: array
        clickedUniqueContactCount:
          description: Total number of unique contacts who clicked on the link
          example: 10
          type: integer
        openedUniqueContactCount:
          description: Total number of unique contacts who opened the link
          example: 14
          type: integer
        sentContactCount:
          description: Total number of contacts who sent the link
          example: 20
          type: integer
        unsubscribeContactCount:
          description: Total number of contacts who unsubscribed from the link
          example: 5
          type: integer
        bounceContactCount:
          description: Total number of contacts who bounced the link
          example: 3
          type: integer
        spamContactCount:
          description: Total number of contacts who marked the link as spam
          example: 2
          type: integer
        clickedContactCount:
          description: Total number of contacts who clicked on the link
          example: 10
          type: integer
        openedContactCount:
          description: Total number of contacts who opened the link
          example: 14
          type: integer
    LinkStat:
      description: Link statistics
      example:
        url: https://sendx.io
        count: 10
      properties:
        url:
          description: The link clicked
          example: https://sendx.io
          type: string
        count:
          description: Total number of times the link was clicked
          example: 10
          type: integer
    RestEPost:
      example:
        postCategory: post_category_YzS1wOU20yw87UUHKxMzwn
        socialImageUrl: https://openapi-generator.tech
        isPublished: false
        pageTitle: pageTitle
        pageKeywords: pageKeywords
        postTemplate: postTemplate
        postThumbnail: https://openapi-generator.tech
        postHtml: postHtml
        socialTitle: socialTitle
        postSlug: introducing-summer-collection
        includedTags:
        - includedTags
        - includedTags
        name: Summer Product Launch
        member: member_JkL012MnO345PqR678
        pageDescription: pageDescription
        socialDescription: socialDescription
        postTitle: Introducing Our New Summer Collection
        editorType: 0
        postDescription: postDescription
        status: 6
      properties:
        name:
          description: Internal post name
          example: Summer Product Launch
          type: string
        postTitle:
          description: Public post title
          example: Introducing Our New Summer Collection
          type: string
        postDescription:
          description: Post excerpt/description
          type: string
        postCategory:
          description: Category ID (with or without prefix)
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          type: string
        member:
          description: Author member ID
          example: member_JkL012MnO345PqR678
          type: string
        postThumbnail:
          description: Thumbnail image URL
          format: uri
          type: string
        postHtml:
          description: Post HTML content
          type: string
        postTemplate:
          description: Post template
          type: string
        isPublished:
          default: false
          description: Publication status
          type: boolean
        includedTags:
          description: Post tag IDs
          items:
            type: string
          type: array
        editorType:
          default: 1
          description: Editor type used
          type: integer
        postSlug:
          description: URL slug
          example: introducing-summer-collection
          type: string
        status:
          default: 1
          description: Post status
          type: integer
        pageTitle:
          description: SEO page title
          type: string
        pageDescription:
          description: SEO meta description
          type: string
        pageKeywords:
          description: SEO keywords
          type: string
        socialTitle:
          description: Social media title
          type: string
        socialDescription:
          description: Social media description
          type: string
        socialImageUrl:
          description: Social media image URL
          format: uri
          type: string
      required:
      - name
      - postTitle
    RestRPost:
      example:
        postCategory: post_category_YzS1wOU20yw87UUHKxMzwn
        socialImageUrl: https://openapi-generator.tech
        isPublished: true
        pageTitle: pageTitle
        created: 2000-01-23T04:56:07.000+00:00
        pageKeywords: pageKeywords
        postThumbnail: https://openapi-generator.tech
        socialTitle: socialTitle
        postSlug: introducing-summer-collection
        includedTags:
        - post_tag_123XyZ456AbC
        - post_tag_123XyZ456AbC
        name: Summer Product Launch
        member: member_JkL012MnO345PqR678
        pageDescription: pageDescription
        socialDescription: socialDescription
        postTitle: Introducing Our New Summer Collection
        id: post_XyZ123aBc456DeF789GhI
        updated: 2000-01-23T04:56:07.000+00:00
        postDescription: postDescription
        status: 0
      properties:
        id:
          example: post_XyZ123aBc456DeF789GhI
          type: string
        name:
          example: Summer Product Launch
          type: string
        postTitle:
          example: Introducing Our New Summer Collection
          type: string
        postDescription:
          type: string
        postCategory:
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          type: string
        member:
          example: member_JkL012MnO345PqR678
          type: string
        postThumbnail:
          format: uri
          type: string
        isPublished:
          type: boolean
        includedTags:
          items:
            example: post_tag_123XyZ456AbC
            type: string
          type: array
        postSlug:
          example: introducing-summer-collection
          type: string
        status:
          type: integer
        pageTitle:
          type: string
        pageDescription:
          type: string
        pageKeywords:
          type: string
        socialTitle:
          type: string
        socialDescription:
          type: string
        socialImageUrl:
          format: uri
          type: string
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
    RestEPostCategory:
      example:
        name: Product Updates
      properties:
        name:
          description: Category name
          example: Product Updates
          type: string
      required:
      - name
    RestRPostCategory:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: Product Updates
        id: post_category_YzS1wOU20yw87UUHKxMzwn
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Id for the post category
          example: post_category_YzS1wOU20yw87UUHKxMzwn
          type: string
        name:
          description: Name for the post category
          example: Product Updates
          type: string
        created:
          description: Date and time when the post category was created
          format: date-time
          type: string
        updated:
          description: Date and time when the post category was last updated
          format: date-time
          type: string
    RestEPostTag:
      example:
        name: Summer Sale
      properties:
        name:
          description: Tag name
          example: Summer Sale
          type: string
      required:
      - name
    RestRPostTag:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: Summer Sale
        id: post_tag_leBDiFdrUnRmRz4nfopSrv
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: post_tag_leBDiFdrUnRmRz4nfopSrv
          type: string
        name:
          description: Tag name
          example: Summer Sale
          type: string
        created:
          description: Date and time when tag was created
          format: date-time
          type: string
        updated:
          description: Date and time when tag was updated
          format: date-time
          type: string
    RestRMember:
      example:
        avatarUrl: https://example.com/avatar.jpg
        created: 2000-01-23T04:56:07.000+00:00
        fullName: John Doe
        id: member_JkL012MnO345PqR678
        userName: johndoe
        updated: 2000-01-23T04:56:07.000+00:00
        email: team.member@company.com
      properties:
        id:
          example: member_JkL012MnO345PqR678
          type: string
        email:
          example: team.member@company.com
          format: email
          type: string
        userName:
          example: johndoe
          type: string
        fullName:
          example: John Doe
          type: string
        avatarUrl:
          example: https://example.com/avatar.jpg
          format: uri
          type: string
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
    IdentifyRequest:
      example:
        firstName: firstName
        lastName: lastName
        customFields:
          key: customFields
        company: company
        newEmail: newEmail
        email: email
        tags:
        - tags
        - tags
      properties:
        email:
          format: email
          type: string
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        customFields:
          additionalProperties:
            type: string
        tags:
          items:
            type: string
          type: array
        newEmail:
          description: New email when updating existing contact
          format: email
          type: string
      required:
      - email
    IdentifyResponse:
      example:
        message: OK
        status: "200"
      properties:
        status:
          example: "200"
          type: string
        message:
          example: OK
          type: string
    TrackRequest:
      example:
        addTags:
        - addTags
        - addTags
        removeTags:
        - removeTags
        - removeTags
        email: test@example.com
      properties:
        addTags:
          description: Tags to add to contact
          items:
            type: string
          type: array
        removeTags:
          description: Tags to remove from contact
          items:
            type: string
          type: array
        email:
          description: Email address of the contact
          example: test@example.com
          type: string
    TrackResponse:
      example:
        message: OK
        status: "200"
      properties:
        status:
          example: "200"
          type: string
        message:
          example: OK
          type: string
    WebhookObject:
      properties:
        type:
          description: The type of the event.
          example: 7
          format: int64
          type: integer
        time:
          description: The timestamp of the event in milliseconds since the epoch.
          example: 1686304219037565000
          format: int64
          type: integer
        data:
          description: Arbitrary data associated with the event.
          example: "{\"key\": \"value\"}"
          type: string
        provider_message_id:
          description: Optional provider message ID.
          example: provider_message_id_123
          type: string
          nullable: true
        campaign_id:
          description: Optional campaign ID.
          example: campaign_id_123
          type: string
          nullable: true
        drip_step_id:
          description: Optional drip step ID.
          example: drip_step_id_123
          type: string
          nullable: true
        rss_exec_id:
          description: Optional RSS execution ID.
          example: rss_exec_id_123
          type: string
          nullable: true
        tag_id:
          description: Optional tag ID.
          example: tag_id_123
          type: string
          nullable: true
        link:
          description: Optional link associated with the event.
          example: https://example.com
          type: string
          nullable: true
        list_id:
          description: Optional list ID.
          example: list_id_123
          type: string
          nullable: true
        contact_id:
          description: Optional contact ID.
          example: contact_id_123
          type: string
          nullable: true
        custom_field_id:
          description: Optional custom field ID.
          example: custom_field_id_123
          type: string
          nullable: true
        template_id:
          description: Optional template ID.
          example: template_id_123
          type: string
          nullable: true
        popup_id:
          description: Optional popup ID.
          example: popup_id_123
          type: string
          nullable: true
        landing_page_id:
          description: Optional landing page ID.
          example: landing_page_id_123
          type: string
          nullable: true
        form_id:
          description: Optional form ID.
          example: form_id_123
          type: string
          nullable: true
        segment_id:
          description: Optional segment ID.
          example: segment_id_123
          type: string
          nullable: true
        automation_id:
          description: Optional automation ID.
          example: automation_id_123
          type: string
          nullable: true
        drip_id:
          description: Optional drip ID.
          example: drip_id_123
          type: string
          nullable: true
        rss_id:
          description: Optional RSS ID.
          example: rss_id_123
          type: string
          nullable: true
        ab_test_id:
          description: Optional A/B test ID.
          example: ab_test_id_123
          type: string
          nullable: true
        workflow_id:
          description: Optional workflow ID.
          example: workflow_id_123
          type: string
          nullable: true
        workflow_node_id:
          description: Optional workflow node ID.
          example: workflow_node_id_123
          type: string
          nullable: true
        workflow_email_id:
          description: Optional workflow email ID.
          example: workflow_email_id_123
          type: string
          nullable: true
    _events_revenue_postback_get_200_response:
      example:
        message: Revenue postback processed successfully.
        status: success
      properties:
        message:
          example: Revenue postback processed successfully.
          type: string
        status:
          example: success
          type: string
    _events_revenue_postback_get_400_response:
      example:
        error: Invalid parameters provided.
      properties:
        error:
          example: Invalid parameters provided.
          type: string
    _events_revenue_postback_get_500_response:
      example:
        error: An unexpected error occurred.
      properties:
        error:
          example: An unexpected error occurred.
          type: string
  securitySchemes:
    TeamApiKey:
      description: |
        Team API key for authentication. Find your API key in SendX Settings → Team API Key.

        **Example:**
        ```
        X-Team-ApiKey: your_team_api_key_here
        ```
      in: header
      name: X-Team-ApiKey
      type: apiKey
